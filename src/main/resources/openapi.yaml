openapi: 3.0.1
info:
  title: MiniProject
  version: "1.0"
servers:
- url: /
paths:
  /api/Annadata/GetAdminDasboardData:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetVendorDasboardById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetFarmerDasboardById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddTaluka:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TalukaMaster'
          application/json:
            schema:
              $ref: '#/components/schemas/TalukaMaster'
          text/json:
            schema:
              $ref: '#/components/schemas/TalukaMaster'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TalukaMaster'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllTaluka:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllTalukaByCityId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddBulkCity:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CityMaster'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CityMaster'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CityMaster'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CityMaster'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllCities:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllCitiesByDistrictId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddBulkDistrict:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/DistrictMaster'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/DistrictMaster'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/DistrictMaster'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/DistrictMaster'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllDistrict:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllDistrictByStateId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddBulkState:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/StateMaster'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/StateMaster'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/StateMaster'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/StateMaster'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllState:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllFoodCategory:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddBulkFoodCategory:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FoodCategoryMaster'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FoodCategoryMaster'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FoodCategoryMaster'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FoodCategoryMaster'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/DeleteFoodCategoryByCategoryId:
    delete:
      parameters:
      - explode: true
        in: query
        name: categoryId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllFoodItems:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllFoodItemsbyCatId:
    get:
      parameters:
      - explode: true
        in: query
        name: catid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetFoodItemById:
    get:
      parameters:
      - explode: true
        in: query
        name: itemId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddFoodItem:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FoodItemMaster'
          application/json:
            schema:
              $ref: '#/components/schemas/FoodItemMaster'
          text/json:
            schema:
              $ref: '#/components/schemas/FoodItemMaster'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FoodItemMaster'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/UpdateFoodItem:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FoodItemMaster'
          application/json:
            schema:
              $ref: '#/components/schemas/FoodItemMaster'
          text/json:
            schema:
              $ref: '#/components/schemas/FoodItemMaster'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FoodItemMaster'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/DeleteFoodItmeByItemId:
    delete:
      parameters:
      - explode: true
        in: query
        name: itemId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllFarmers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetFarmerById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetFarmersByFilter:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FarmerFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/FarmerFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/FarmerFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FarmerFilter'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddNewFarmer:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FarmerMasterView'
          application/json:
            schema:
              $ref: '#/components/schemas/FarmerMasterView'
          text/json:
            schema:
              $ref: '#/components/schemas/FarmerMasterView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FarmerMasterView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/UpdateFarmerDetails:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FarmerMasterView'
          application/json:
            schema:
              $ref: '#/components/schemas/FarmerMasterView'
          text/json:
            schema:
              $ref: '#/components/schemas/FarmerMasterView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FarmerMasterView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/DeleteFarmerByFarmerId:
    delete:
      parameters:
      - explode: true
        in: query
        name: farmerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllExecutive:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetDownlineExecutiveByExecutiveId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddUpdateExecutive:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Executive'
          application/json:
            schema:
              $ref: '#/components/schemas/Executive'
          text/json:
            schema:
              $ref: '#/components/schemas/Executive'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Executive'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/DeleteExecutiveByExecutiveId:
    delete:
      parameters:
      - explode: true
        in: query
        name: executiveId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/VerifyFarmer:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FarmerVerificationModel'
          application/json:
            schema:
              $ref: '#/components/schemas/FarmerVerificationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/FarmerVerificationModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FarmerVerificationModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/VerifyVendor:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VendorVerificationModel'
          application/json:
            schema:
              $ref: '#/components/schemas/VendorVerificationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/VendorVerificationModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VendorVerificationModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetVendorsByFilter:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VendorFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/VendorFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/VendorFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VendorFilter'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetVendorById:
    get:
      parameters:
      - explode: true
        in: query
        name: vendorId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddNewVendor:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VendorMaster'
          application/json:
            schema:
              $ref: '#/components/schemas/VendorMaster'
          text/json:
            schema:
              $ref: '#/components/schemas/VendorMaster'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VendorMaster'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/UpdateVendor:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VendorMaster'
          application/json:
            schema:
              $ref: '#/components/schemas/VendorMaster'
          text/json:
            schema:
              $ref: '#/components/schemas/VendorMaster'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VendorMaster'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/DeleteVendorByVendorId:
    delete:
      parameters:
      - explode: true
        in: query
        name: vendorId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllQuotation:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllQuotationByFarmerId:
    get:
      parameters:
      - explode: true
        in: query
        name: farmerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/FilterQuotation:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/QuotationFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/QuotationFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/QuotationFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuotationFilter'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/getRfqByQuotationId:
    get:
      parameters:
      - explode: true
        in: query
        name: quotationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/CreateNewRfq:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/QuotationMasterView'
          application/json:
            schema:
              $ref: '#/components/schemas/QuotationMasterView'
          text/json:
            schema:
              $ref: '#/components/schemas/QuotationMasterView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuotationMasterView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/UpdateRfq:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/QuotationMaster'
          application/json:
            schema:
              $ref: '#/components/schemas/QuotationMaster'
          text/json:
            schema:
              $ref: '#/components/schemas/QuotationMaster'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuotationMaster'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/DeleteRfqByRFQId:
    delete:
      parameters:
      - explode: true
        in: query
        name: quotationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllQuotationBids:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllQuotationBidsByVendorId:
    get:
      parameters:
      - explode: true
        in: query
        name: vendorId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllQuotationBidsByFarmerId:
    get:
      parameters:
      - explode: true
        in: query
        name: farmerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllBidsByQuotationId:
    get:
      parameters:
      - explode: true
        in: query
        name: quotationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetBidsForQuotationById:
    get:
      parameters:
      - explode: true
        in: query
        name: quotationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: vendorID
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/FilterQuotationBids:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/QuotationBidFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/QuotationBidFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/QuotationBidFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuotationBidFilter'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddBid:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/QuotationBid'
          application/json:
            schema:
              $ref: '#/components/schemas/QuotationBid'
          text/json:
            schema:
              $ref: '#/components/schemas/QuotationBid'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuotationBid'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/UpdateBid:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/QuotationBid'
          application/json:
            schema:
              $ref: '#/components/schemas/QuotationBid'
          text/json:
            schema:
              $ref: '#/components/schemas/QuotationBid'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuotationBid'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/DeleteBidByBidId:
    delete:
      parameters:
      - explode: true
        in: query
        name: bidId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllVendorUsers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllCustomerUsers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllFarmerUsers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddUpdateUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/annadataUser'
          application/json:
            schema:
              $ref: '#/components/schemas/annadataUser'
          text/json:
            schema:
              $ref: '#/components/schemas/annadataUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/annadataUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LoginModel'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/DeleteUserByUserId:
    delete:
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetAllCustomers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/GetCustomerById:
    get:
      parameters:
      - explode: true
        in: query
        name: customerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/AddUpdateCustomer:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/annadataCustomer'
          application/json:
            schema:
              $ref: '#/components/schemas/annadataCustomer'
          text/json:
            schema:
              $ref: '#/components/schemas/annadataCustomer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/annadataCustomer'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/Annadata/DeleteCustomerByCustomerId:
    delete:
      parameters:
      - explode: true
        in: query
        name: customerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Annadata
      x-accepts: application/json
      x-tags:
      - tag: Annadata
  /api/BigBasket/GetAllProducts:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/GetAllProductsByCategoryId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/CreateProduct:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BigEcomProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/BigEcomProduct'
          text/json:
            schema:
              $ref: '#/components/schemas/BigEcomProduct'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BigEcomProduct'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/UpdateProduct:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BigEcomProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/BigEcomProduct'
          text/json:
            schema:
              $ref: '#/components/schemas/BigEcomProduct'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BigEcomProduct'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/DeleteProductById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/GetProductById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/GetCartProductsByCustomerId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/GetAllCartItems:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/AddToCart:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BigEcomCart'
          application/json:
            schema:
              $ref: '#/components/schemas/BigEcomCart'
          text/json:
            schema:
              $ref: '#/components/schemas/BigEcomCart'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BigEcomCart'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/DeleteProductFromCartById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/GetAllSaleByCustomerId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/GetAllSaleItems:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/PlaceOrder:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BigEcomSale'
          application/json:
            schema:
              $ref: '#/components/schemas/BigEcomSale'
          text/json:
            schema:
              $ref: '#/components/schemas/BigEcomSale'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BigEcomSale'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/GetAllCategory:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/CreateNewCategory:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BigEcomCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/BigEcomCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/BigEcomCategory'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BigEcomCategory'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/GetAllCustomer:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/RegisterCustomer:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BigEcomCustomer'
          application/json:
            schema:
              $ref: '#/components/schemas/BigEcomCustomer'
          text/json:
            schema:
              $ref: '#/components/schemas/BigEcomCustomer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BigEcomCustomer'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/BigBasket/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BigUserLogin'
          application/json:
            schema:
              $ref: '#/components/schemas/BigUserLogin'
          text/json:
            schema:
              $ref: '#/components/schemas/BigUserLogin'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BigUserLogin'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - BigBasket
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: BigBasket
  /api/ClientStrive/GetAllEmployee:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/GetEmployeeByEmployeeId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/CreateNewEmployee:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ErmEmployeeView'
          application/json:
            schema:
              $ref: '#/components/schemas/ErmEmployeeView'
          text/json:
            schema:
              $ref: '#/components/schemas/ErmEmployeeView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ErmEmployeeView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/UpdateEmployee:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ErmEmployeeView'
          application/json:
            schema:
              $ref: '#/components/schemas/ErmEmployeeView'
          text/json:
            schema:
              $ref: '#/components/schemas/ErmEmployeeView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ErmEmployeeView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/DeleteRoomByRoomId:
    delete:
      parameters:
      - explode: true
        in: query
        name: empId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/GetAllClients:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/AddUpdateClient:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ErmClient'
          application/json:
            schema:
              $ref: '#/components/schemas/ErmClient'
          text/json:
            schema:
              $ref: '#/components/schemas/ErmClient'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ErmClient'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/DeleteClientByClientId:
    delete:
      parameters:
      - explode: true
        in: query
        name: clientId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/GetAllClientProjects:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/GetProjectsByClientId:
    get:
      parameters:
      - explode: true
        in: query
        name: clientId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/AddUpdateClientProject:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ErmClientProject'
          application/json:
            schema:
              $ref: '#/components/schemas/ErmClientProject'
          text/json:
            schema:
              $ref: '#/components/schemas/ErmClientProject'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ErmClientProject'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/DeleteProjectByProjectId:
    delete:
      parameters:
      - explode: true
        in: query
        name: projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/GetAllMeetings:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/GetAllMeetingsByProjectId:
    get:
      parameters:
      - explode: true
        in: query
        name: projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/AddUpdateProjectMeeting:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ErpProjectMeeting'
          application/json:
            schema:
              $ref: '#/components/schemas/ErpProjectMeeting'
          text/json:
            schema:
              $ref: '#/components/schemas/ErpProjectMeeting'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ErpProjectMeeting'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/DeleteMeetingByMeetingId:
    delete:
      parameters:
      - explode: true
        in: query
        name: meetingId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/GetAllProjectChange:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/GetAllProjectChangeByProjectId:
    get:
      parameters:
      - explode: true
        in: query
        name: projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/AddUpdateProjectChange:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ErpProjectChange'
          application/json:
            schema:
              $ref: '#/components/schemas/ErpProjectChange'
          text/json:
            schema:
              $ref: '#/components/schemas/ErpProjectChange'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ErpProjectChange'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/DeleteChangeByChangeId:
    delete:
      parameters:
      - explode: true
        in: query
        name: changeId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/GetAllPayments:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/GetAllPaymentsByProjectId:
    get:
      parameters:
      - explode: true
        in: query
        name: projectId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/GetAllPaymentsByClientId:
    get:
      parameters:
      - explode: true
        in: query
        name: clientId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/AddUpdatePayment:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ErpProjectPayment'
          application/json:
            schema:
              $ref: '#/components/schemas/ErpProjectPayment'
          text/json:
            schema:
              $ref: '#/components/schemas/ErpProjectPayment'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ErpProjectPayment'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/ClientStrive/DeletePaymentByPaymentId:
    delete:
      parameters:
      - explode: true
        in: query
        name: paymentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ClientStrive
      x-accepts: application/json
      x-tags:
      - tag: ClientStrive
  /api/amazon/GetAllProducts:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/GetAllProductsByCategoryId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/CreateProduct:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EcomProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/EcomProduct'
          text/json:
            schema:
              $ref: '#/components/schemas/EcomProduct'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EcomProduct'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/UpdateProduct:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EcomProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/EcomProduct'
          text/json:
            schema:
              $ref: '#/components/schemas/EcomProduct'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EcomProduct'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/DeleteProductById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/GetProductById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/GetCartProductsByCustomerId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/GetAllCartItems:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/AddToCart:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EcomCart'
          application/json:
            schema:
              $ref: '#/components/schemas/EcomCart'
          text/json:
            schema:
              $ref: '#/components/schemas/EcomCart'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EcomCart'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/DeleteProductFromCartById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/GetAllSaleByCustomerId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/GetAllSaleItems:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/PlaceOrder:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EcomSale'
          application/json:
            schema:
              $ref: '#/components/schemas/EcomSale'
          text/json:
            schema:
              $ref: '#/components/schemas/EcomSale'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EcomSale'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/GetAllCategory:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/CreateNewCategory:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EcomCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/EcomCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/EcomCategory'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EcomCategory'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/GetAllCustomer:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/RegisterCustomer:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EcomCustomer'
          application/json:
            schema:
              $ref: '#/components/schemas/EcomCustomer'
          text/json:
            schema:
              $ref: '#/components/schemas/EcomCustomer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EcomCustomer'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/amazon/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          text/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Ecomm
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Ecomm
  /api/EventBooking/GetAllUsers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EventLoginUser'
          application/json:
            schema:
              $ref: '#/components/schemas/EventLoginUser'
          text/json:
            schema:
              $ref: '#/components/schemas/EventLoginUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EventLoginUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/CreateUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EventUser'
          application/json:
            schema:
              $ref: '#/components/schemas/EventUser'
          text/json:
            schema:
              $ref: '#/components/schemas/EventUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EventUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/UpdateUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EventUser'
          application/json:
            schema:
              $ref: '#/components/schemas/EventUser'
          text/json:
            schema:
              $ref: '#/components/schemas/EventUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EventUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/DeleteUserById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/GetUserById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/GetProjectAssignmentByFilter:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EventFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/EventFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/EventFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EventFilter'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/GetAllEvents:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/GetEventsByOrganizer:
    get:
      parameters:
      - explode: true
        in: query
        name: organizerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/CreateEvent:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EventMaster'
          application/json:
            schema:
              $ref: '#/components/schemas/EventMaster'
          text/json:
            schema:
              $ref: '#/components/schemas/EventMaster'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EventMaster'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/UpdateEvent:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EventMaster'
          application/json:
            schema:
              $ref: '#/components/schemas/EventMaster'
          text/json:
            schema:
              $ref: '#/components/schemas/EventMaster'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EventMaster'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/DeleteEventById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/GetEventById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/GetBookingsByCustomer:
    get:
      parameters:
      - explode: true
        in: query
        name: customerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/GetAllEventBooking:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/GetBookingsByEvent:
    get:
      parameters:
      - explode: true
        in: query
        name: eventId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/BookEvent:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EventBookingViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/EventBookingViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EventBookingViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EventBookingViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/DeleteBookingById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/EventBooking/GetBookingById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - EventBooking
      x-accepts: application/json
      x-tags:
      - tag: EventBooking
  /api/Goals/GetAllUsers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GoalLogin'
          application/json:
            schema:
              $ref: '#/components/schemas/GoalLogin'
          text/json:
            schema:
              $ref: '#/components/schemas/GoalLogin'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GoalLogin'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/GetUserById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/createNewUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GoalUser'
          application/json:
            schema:
              $ref: '#/components/schemas/GoalUser'
          text/json:
            schema:
              $ref: '#/components/schemas/GoalUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GoalUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/updateUser:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GoalUser'
          application/json:
            schema:
              $ref: '#/components/schemas/GoalUser'
          text/json:
            schema:
              $ref: '#/components/schemas/GoalUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GoalUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/DeleteUserById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/GetAllCategories:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/AddBulkCategories:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/GoalCategory'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/GoalCategory'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/GoalCategory'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/GoalCategory'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/DeleteCategoryById:
    delete:
      parameters:
      - explode: true
        in: query
        name: categoryId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/GetAllGoals:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/GetAllGoalsCreatedByUser:
    get:
      parameters:
      - explode: true
        in: query
        name: userid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/getGoalById:
    get:
      parameters:
      - explode: true
        in: query
        name: goalid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/createNewGoal:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateGoalView'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGoalView'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateGoalView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateGoalView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/UpdateGoal:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ViewGoalView'
          application/json:
            schema:
              $ref: '#/components/schemas/ViewGoalView'
          text/json:
            schema:
              $ref: '#/components/schemas/ViewGoalView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ViewGoalView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/Goals/DeleteGoalById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Goals
      x-accepts: application/json
      x-tags:
      - tag: Goals
  /api/HospitalAppointment/GetDashboardData:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HospitalAppointment/GetAllPatients:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HospitalAppointment/GetPatientByPatientId:
    get:
      parameters:
      - explode: true
        in: query
        name: patientId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HospitalAppointment/AddNewPatient:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/hospitalPatient'
          application/json:
            schema:
              $ref: '#/components/schemas/hospitalPatient'
          text/json:
            schema:
              $ref: '#/components/schemas/hospitalPatient'
          application/*+json:
            schema:
              $ref: '#/components/schemas/hospitalPatient'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HospitalAppointment/UpdatePatient:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/hospitalPatient'
          application/json:
            schema:
              $ref: '#/components/schemas/hospitalPatient'
          text/json:
            schema:
              $ref: '#/components/schemas/hospitalPatient'
          application/*+json:
            schema:
              $ref: '#/components/schemas/hospitalPatient'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HospitalAppointment/DeletePatientByPatienId:
    delete:
      parameters:
      - explode: true
        in: query
        name: patientId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HospitalAppointment/GetAllAppointments:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HospitalAppointment/GetTodaysAppointments:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HospitalAppointment/GetAppointmentByAppointmentId:
    get:
      parameters:
      - explode: true
        in: query
        name: appointmentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HospitalAppointment/AddNewAppointment:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/hospitalAppointmentView'
          application/json:
            schema:
              $ref: '#/components/schemas/hospitalAppointmentView'
          text/json:
            schema:
              $ref: '#/components/schemas/hospitalAppointmentView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/hospitalAppointmentView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HospitalAppointment/MarkAppointmentDone:
    get:
      parameters:
      - explode: true
        in: query
        name: appointmentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HospitalAppointment/DeleteAppointmentByAppointment:
    delete:
      parameters:
      - explode: true
        in: query
        name: appointmentId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HospitalAppointment
      x-accepts: application/json
      x-tags:
      - tag: HospitalAppointment
  /api/HotelBooking/GetAllRooms:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/AddUpdateBulkRooms:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/hotelRoomMaster'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/hotelRoomMaster'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/hotelRoomMaster'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/hotelRoomMaster'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/DeleteRoomByRoomId:
    delete:
      parameters:
      - explode: true
        in: query
        name: roomId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TrainLogin'
          application/json:
            schema:
              $ref: '#/components/schemas/TrainLogin'
          text/json:
            schema:
              $ref: '#/components/schemas/TrainLogin'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TrainLogin'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/GetAllUsers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/AddUpdateUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/hotelUser'
          application/json:
            schema:
              $ref: '#/components/schemas/hotelUser'
          text/json:
            schema:
              $ref: '#/components/schemas/hotelUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/hotelUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/DeleteUserByUserId:
    delete:
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/GetAllCustomers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/AddUpdateCustomer:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/hotelCustomer'
          application/json:
            schema:
              $ref: '#/components/schemas/hotelCustomer'
          text/json:
            schema:
              $ref: '#/components/schemas/hotelCustomer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/hotelCustomer'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/DeleteCustomerByCustomerId:
    delete:
      parameters:
      - explode: true
        in: query
        name: custId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/GetAllBookings:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/GetBookingsByMonth:
    get:
      parameters:
      - explode: true
        in: query
        name: month
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/FilterBooking:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilterhotelBooking'
          application/json:
            schema:
              $ref: '#/components/schemas/FilterhotelBooking'
          text/json:
            schema:
              $ref: '#/components/schemas/FilterhotelBooking'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilterhotelBooking'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/GetAllBookingsByRoomId:
    get:
      parameters:
      - explode: true
        in: query
        name: roomId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/GetBookingsCreatedByUser:
    get:
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/GetBookingByBookingId:
    get:
      parameters:
      - explode: true
        in: query
        name: bookingId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/BookRoom:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NewhotelBooking'
          application/json:
            schema:
              $ref: '#/components/schemas/NewhotelBooking'
          text/json:
            schema:
              $ref: '#/components/schemas/NewhotelBooking'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewhotelBooking'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/HotelBooking/CancelBookingByBookingId:
    delete:
      parameters:
      - explode: true
        in: query
        name: bookingId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - HotelBooking
      x-accepts: application/json
      x-tags:
      - tag: HotelBooking
  /api/Interview/GetAllLanguage:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview/addUpdateLanguage:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InLanguage'
          application/json:
            schema:
              $ref: '#/components/schemas/InLanguage'
          text/json:
            schema:
              $ref: '#/components/schemas/InLanguage'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InLanguage'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview/deleteLanguage:
    delete:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview/GetLanguageTopicById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview/GetLanguageTopic:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview/addLanguageTopic:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InLanguageTopic'
          application/json:
            schema:
              $ref: '#/components/schemas/InLanguageTopic'
          text/json:
            schema:
              $ref: '#/components/schemas/InLanguageTopic'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InLanguageTopic'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview/deleteLanguageTopic:
    delete:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview/GetQuestionByTopicId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview/GetAllQuestions:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview/GetAllQuestionsByLanguageId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview/addLanguageQuestion:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InQuestion'
          application/json:
            schema:
              $ref: '#/components/schemas/InQuestion'
          text/json:
            schema:
              $ref: '#/components/schemas/InQuestion'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InQuestion'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InQuestion'
          application/json:
            schema:
              $ref: '#/components/schemas/InQuestion'
          text/json:
            schema:
              $ref: '#/components/schemas/InQuestion'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InQuestion'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Interview/deleteLanguageQuestion:
    delete:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Interview
      x-accepts: application/json
      x-tags:
      - tag: Interview
  /api/Jira/GetAllTickets:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/GetTicketsByProjectId:
    get:
      parameters:
      - explode: true
        in: query
        name: projectid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/GetTicketsAssignedByUserId:
    get:
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/GetTicketById:
    post:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/CreateTicket:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JiraIssue'
          application/json:
            schema:
              $ref: '#/components/schemas/JiraIssue'
          text/json:
            schema:
              $ref: '#/components/schemas/JiraIssue'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JiraIssue'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/UpdateTicket:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JiraIssue'
          application/json:
            schema:
              $ref: '#/components/schemas/JiraIssue'
          text/json:
            schema:
              $ref: '#/components/schemas/JiraIssue'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JiraIssue'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/DeleteTicketById:
    delete:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/GetAllUsers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JiraUser'
          application/json:
            schema:
              $ref: '#/components/schemas/JiraUser'
          text/json:
            schema:
              $ref: '#/components/schemas/JiraUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JiraUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/CreateUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JiraUser'
          application/json:
            schema:
              $ref: '#/components/schemas/JiraUser'
          text/json:
            schema:
              $ref: '#/components/schemas/JiraUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JiraUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/UpdateUser:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JiraUser'
          application/json:
            schema:
              $ref: '#/components/schemas/JiraUser'
          text/json:
            schema:
              $ref: '#/components/schemas/JiraUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JiraUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/DeleteUserById:
    delete:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/GetAllProjects:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/CreateProject:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JiraProject'
          application/json:
            schema:
              $ref: '#/components/schemas/JiraProject'
          text/json:
            schema:
              $ref: '#/components/schemas/JiraProject'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JiraProject'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/UpdateProject:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JiraProject'
          application/json:
            schema:
              $ref: '#/components/schemas/JiraProject'
          text/json:
            schema:
              $ref: '#/components/schemas/JiraProject'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JiraProject'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/Jira/DeleteProjectById:
    delete:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Jira
      x-accepts: application/json
      x-tags:
      - tag: Jira
  /api/JobPortal/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobUserView'
          application/json:
            schema:
              $ref: '#/components/schemas/JobUserView'
          text/json:
            schema:
              $ref: '#/components/schemas/JobUserView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobUserView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetAllJobCategory:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/AddBulkJobCategory:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/JobCategory'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/JobCategory'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/JobCategory'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/JobCategory'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/DeleteJobCategoryByCategoryId:
    delete:
      parameters:
      - explode: true
        in: query
        name: categoryId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetAllEmployer:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetEmployerById:
    get:
      parameters:
      - explode: true
        in: query
        name: employerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/AddNewEmployer:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobEmployer'
          application/json:
            schema:
              $ref: '#/components/schemas/JobEmployer'
          text/json:
            schema:
              $ref: '#/components/schemas/JobEmployer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobEmployer'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/UpdateEmployer:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobEmployer'
          application/json:
            schema:
              $ref: '#/components/schemas/JobEmployer'
          text/json:
            schema:
              $ref: '#/components/schemas/JobEmployer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobEmployer'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/DeleteEmployerById:
    delete:
      parameters:
      - explode: true
        in: query
        name: employerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetAllJobSeeker:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetJobSeekerById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/AddNewJobSeeker:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobSeekerViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/JobSeekerViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/JobSeekerViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobSeekerViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/DeleteJobSeekerById:
    delete:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetActiveJobListing:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetAllJobListing:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetJobsByEmployerId:
    get:
      parameters:
      - explode: true
        in: query
        name: employerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetApplcationsByJobId:
    get:
      parameters:
      - explode: true
        in: query
        name: jobId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetAllJobApplcations:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetApplcationsByJobSeekerId:
    get:
      parameters:
      - explode: true
        in: query
        name: jobSeekerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/SendJobApplication:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobApplication'
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
          text/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobApplication'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/GetJobListingById:
    get:
      parameters:
      - explode: true
        in: query
        name: jobId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/CreateNewJobListing:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobListing'
          application/json:
            schema:
              $ref: '#/components/schemas/JobListing'
          text/json:
            schema:
              $ref: '#/components/schemas/JobListing'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobListing'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/UpdateJobListing:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobListing'
          application/json:
            schema:
              $ref: '#/components/schemas/JobListing'
          text/json:
            schema:
              $ref: '#/components/schemas/JobListing'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobListing'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/JobPortal/DeleteJobById:
    delete:
      parameters:
      - explode: true
        in: query
        name: jobid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - JobPortal
      x-accepts: application/json
      x-tags:
      - tag: JobPortal
  /api/OnlineTest/GetAllUsers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TestLogin'
          application/json:
            schema:
              $ref: '#/components/schemas/TestLogin'
          text/json:
            schema:
              $ref: '#/components/schemas/TestLogin'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TestLogin'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/GetUserById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/AddUpdateBulkUsers:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/quizUser'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/quizUser'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/quizUser'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/quizUser'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/createNewUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/quizUser'
          application/json:
            schema:
              $ref: '#/components/schemas/quizUser'
          text/json:
            schema:
              $ref: '#/components/schemas/quizUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/quizUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/updateUser:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/quizUser'
          application/json:
            schema:
              $ref: '#/components/schemas/quizUser'
          text/json:
            schema:
              $ref: '#/components/schemas/quizUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/quizUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/DeleteUserById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/GetAllCategories:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/AddBulkCategories:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/quizCategory'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/quizCategory'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/quizCategory'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/quizCategory'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/DeleteCategoryById:
    delete:
      parameters:
      - explode: true
        in: query
        name: categoryId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/GetAllQuestions:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/getAllQuestionByCategoryId:
    get:
      parameters:
      - explode: true
        in: query
        name: categoryId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/getQuestionId:
    get:
      parameters:
      - explode: true
        in: query
        name: questionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/createNewQuestion:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/quizQuestionsViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/quizQuestionsViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/quizQuestionsViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/quizQuestionsViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/UpdateQuestion:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/quizQuestionsViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/quizQuestionsViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/quizQuestionsViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/quizQuestionsViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/DeleteQuestionById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/GetAllTest:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/getAllQuestionByTestId:
    get:
      parameters:
      - explode: true
        in: query
        name: testId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/getTestByTestId:
    get:
      parameters:
      - explode: true
        in: query
        name: testId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/createNewTest:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/quizTestViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/quizTestViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/quizTestViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/quizTestViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/UpdateTest:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/quizTestViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/quizTestViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/quizTestViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/quizTestViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/DeleteTestByTestId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/GetAllAssignedTest:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/GetAllAssignedTestByRegistrationCode:
    get:
      parameters:
      - explode: true
        in: query
        name: regCode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/assignTest:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssignTestView'
          application/json:
            schema:
              $ref: '#/components/schemas/AssignTestView'
          text/json:
            schema:
              $ref: '#/components/schemas/AssignTestView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignTestView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/bulkUpdateAssignedTest:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/quizAssignedtest'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/quizAssignedtest'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/quizAssignedtest'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/quizAssignedtest'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/DeleteAssignedTestByAssignTestId:
    get:
      parameters:
      - explode: true
        in: query
        name: assignedTestId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/DeleteAssignedTestByRegCode:
    get:
      parameters:
      - explode: true
        in: query
        name: regCode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/GetTestAnswers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/GetTestResultByRegCode:
    get:
      parameters:
      - explode: true
        in: query
        name: regCode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/SubmitTest:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/quizAssignedtestViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/quizAssignedtestViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/quizAssignedtestViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/quizAssignedtestViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/OnlineTest/DeleteAnswersByTestId:
    get:
      parameters:
      - explode: true
        in: query
        name: testId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - OnlineTest
      x-accepts: application/json
      x-tags:
      - tag: OnlineTest
  /api/Resort/GetTodaysVisit:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/WaterCustomerView'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WaterCustomerView'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/WaterCustomerView'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetDasboardData:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/DashModel'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DashModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/DashModel'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/getTodayDashboardCount:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/DashModelToday'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DashModelToday'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/DashModelToday'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/getDateWiseVisit:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/dataGraph'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dataGraph'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/dataGraph'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetVisit:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllVisit:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VisitSearch'
          application/json:
            schema:
              $ref: '#/components/schemas/VisitSearch'
          text/json:
            schema:
              $ref: '#/components/schemas/VisitSearch'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VisitSearch'
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/WaterCustomerView'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WaterCustomerView'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/WaterCustomerView'
                type: array
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetSingleVisitByVisitId:
    get:
      parameters:
      - explode: true
        in: query
        name: visitId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WaterCustomer'
            application/json:
              schema:
                $ref: '#/components/schemas/WaterCustomer'
            text/json:
              schema:
                $ref: '#/components/schemas/WaterCustomer'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddVisit:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WaterCustomerObj'
          application/json:
            schema:
              $ref: '#/components/schemas/WaterCustomerObj'
          text/json:
            schema:
              $ref: '#/components/schemas/WaterCustomerObj'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WaterCustomerObj'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WaterCustomerObj'
            application/json:
              schema:
                $ref: '#/components/schemas/WaterCustomerObj'
            text/json:
              schema:
                $ref: '#/components/schemas/WaterCustomerObj'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllFoodItemType:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/FoodItemType'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FoodItemType'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/FoodItemType'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddFoodItemtype:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FoodItemType'
          application/json:
            schema:
              $ref: '#/components/schemas/FoodItemType'
          text/json:
            schema:
              $ref: '#/components/schemas/FoodItemType'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FoodItemType'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FoodItemType'
            application/json:
              schema:
                $ref: '#/components/schemas/FoodItemType'
            text/json:
              schema:
                $ref: '#/components/schemas/FoodItemType'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetFoodItemList:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/FoodItemList'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FoodItemList'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/FoodItemList'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddFoodItem:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FoodItemView'
          application/json:
            schema:
              $ref: '#/components/schemas/FoodItemView'
          text/json:
            schema:
              $ref: '#/components/schemas/FoodItemView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FoodItemView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FoodItemView'
            application/json:
              schema:
                $ref: '#/components/schemas/FoodItemView'
            text/json:
              schema:
                $ref: '#/components/schemas/FoodItemView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/DeleteFoodItem:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FoodItemView'
          application/json:
            schema:
              $ref: '#/components/schemas/FoodItemView'
          text/json:
            schema:
              $ref: '#/components/schemas/FoodItemView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FoodItemView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FoodItemView'
            application/json:
              schema:
                $ref: '#/components/schemas/FoodItemView'
            text/json:
              schema:
                $ref: '#/components/schemas/FoodItemView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetOrderList:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/FoodOrder'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FoodOrder'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/FoodOrder'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetOpenOrderList:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetOrderStatus:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetOrder:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FoodOrderOpen'
            application/json:
              schema:
                $ref: '#/components/schemas/FoodOrderOpen'
            text/json:
              schema:
                $ref: '#/components/schemas/FoodOrderOpen'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddOrder:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
          application/json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
          text/json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FoodOrderView'
            application/json:
              schema:
                $ref: '#/components/schemas/FoodOrderView'
            text/json:
              schema:
                $ref: '#/components/schemas/FoodOrderView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/UpddateOrder:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
          application/json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
          text/json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FoodOrderView'
            application/json:
              schema:
                $ref: '#/components/schemas/FoodOrderView'
            text/json:
              schema:
                $ref: '#/components/schemas/FoodOrderView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/DeleteOrder:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
          application/json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
          text/json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FoodOrderView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FoodOrderView'
            application/json:
              schema:
                $ref: '#/components/schemas/FoodOrderView'
            text/json:
              schema:
                $ref: '#/components/schemas/FoodOrderView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllUser:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/UserMaster'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserMaster'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserMaster'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
          application/json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
          text/json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserMasterView'
            application/json:
              schema:
                $ref: '#/components/schemas/UserMasterView'
            text/json:
              schema:
                $ref: '#/components/schemas/UserMasterView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/DeleteUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
          application/json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
          text/json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserMasterView'
            application/json:
              schema:
                $ref: '#/components/schemas/UserMasterView'
            text/json:
              schema:
                $ref: '#/components/schemas/UserMasterView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
          application/json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
          text/json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserMasterView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserMasterView'
            application/json:
              schema:
                $ref: '#/components/schemas/UserMasterView'
            text/json:
              schema:
                $ref: '#/components/schemas/UserMasterView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllHead:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/StatusMasterViewModel'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StatusMasterViewModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/StatusMasterViewModel'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/getAllMaster:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/StatusMasterViewModel'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StatusMasterViewModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/StatusMasterViewModel'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetMasterByStatus:
    get:
      parameters:
      - explode: true
        in: query
        name: master
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/StatusMasterViewModel'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StatusMasterViewModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/StatusMasterViewModel'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/addMaster:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StatusMasterView'
          application/json:
            schema:
              $ref: '#/components/schemas/StatusMasterView'
          text/json:
            schema:
              $ref: '#/components/schemas/StatusMasterView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StatusMasterView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StatusMasterView'
            application/json:
              schema:
                $ref: '#/components/schemas/StatusMasterView'
            text/json:
              schema:
                $ref: '#/components/schemas/StatusMasterView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/deleteMaster:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StatusMasterView'
          application/json:
            schema:
              $ref: '#/components/schemas/StatusMasterView'
          text/json:
            schema:
              $ref: '#/components/schemas/StatusMasterView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StatusMasterView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StatusMasterView'
            application/json:
              schema:
                $ref: '#/components/schemas/StatusMasterView'
            text/json:
              schema:
                $ref: '#/components/schemas/StatusMasterView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllService:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Service'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Service'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Service'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddService:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServicesView'
          application/json:
            schema:
              $ref: '#/components/schemas/ServicesView'
          text/json:
            schema:
              $ref: '#/components/schemas/ServicesView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServicesView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServicesView'
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesView'
            text/json:
              schema:
                $ref: '#/components/schemas/ServicesView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/DeleteService:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ServicesView'
          application/json:
            schema:
              $ref: '#/components/schemas/ServicesView'
          text/json:
            schema:
              $ref: '#/components/schemas/ServicesView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServicesView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServicesView'
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesView'
            text/json:
              schema:
                $ref: '#/components/schemas/ServicesView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllOffer:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Offer'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Offer'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Offer'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddOffer:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OfferView'
          application/json:
            schema:
              $ref: '#/components/schemas/OfferView'
          text/json:
            schema:
              $ref: '#/components/schemas/OfferView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OfferView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OfferView'
            application/json:
              schema:
                $ref: '#/components/schemas/OfferView'
            text/json:
              schema:
                $ref: '#/components/schemas/OfferView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/DeleteOffer:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OfferView'
          application/json:
            schema:
              $ref: '#/components/schemas/OfferView'
          text/json:
            schema:
              $ref: '#/components/schemas/OfferView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OfferView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OfferView'
            application/json:
              schema:
                $ref: '#/components/schemas/OfferView'
            text/json:
              schema:
                $ref: '#/components/schemas/OfferView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllEnquiry:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EnquirySearch'
          application/json:
            schema:
              $ref: '#/components/schemas/EnquirySearch'
          text/json:
            schema:
              $ref: '#/components/schemas/EnquirySearch'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EnquirySearch'
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetTopEnquries:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetEnquiryByUserId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllEnquiryBySubject:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/EnquiryView'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetEnquiryByEnquiryId:
    post:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddEnquiry:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EnquiryView'
          application/json:
            schema:
              $ref: '#/components/schemas/EnquiryView'
          text/json:
            schema:
              $ref: '#/components/schemas/EnquiryView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EnquiryView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EnquiryView'
            application/json:
              schema:
                $ref: '#/components/schemas/EnquiryView'
            text/json:
              schema:
                $ref: '#/components/schemas/EnquiryView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/DeleteEnquiry:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EnquiryView'
          application/json:
            schema:
              $ref: '#/components/schemas/EnquiryView'
          text/json:
            schema:
              $ref: '#/components/schemas/EnquiryView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EnquiryView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EnquiryView'
            application/json:
              schema:
                $ref: '#/components/schemas/EnquiryView'
            text/json:
              schema:
                $ref: '#/components/schemas/EnquiryView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetweddingService:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingService'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingService'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingService'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddUpdateBulkWeddingService:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/WeddingServiceView'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/WeddingServiceView'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/WeddingServiceView'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/WeddingServiceView'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddweddingService:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WeddingServiceView'
          application/json:
            schema:
              $ref: '#/components/schemas/WeddingServiceView'
          text/json:
            schema:
              $ref: '#/components/schemas/WeddingServiceView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WeddingServiceView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WeddingServiceView'
            application/json:
              schema:
                $ref: '#/components/schemas/WeddingServiceView'
            text/json:
              schema:
                $ref: '#/components/schemas/WeddingServiceView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/DeleteweddingService:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WeddingServiceView'
          application/json:
            schema:
              $ref: '#/components/schemas/WeddingServiceView'
          text/json:
            schema:
              $ref: '#/components/schemas/WeddingServiceView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WeddingServiceView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WeddingServiceView'
            application/json:
              schema:
                $ref: '#/components/schemas/WeddingServiceView'
            text/json:
              schema:
                $ref: '#/components/schemas/WeddingServiceView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetWeddingByMonth:
    get:
      parameters:
      - explode: true
        in: query
        name: month
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingBookingList'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingBookingList'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingBookingList'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/Getwedding/{id}:
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingMasterList'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingMasterList'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingMasterList'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetweddingWithPackage:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingMasterList'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingMasterList'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingMasterList'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/WeddingWithPackage:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingPackageMasterList'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingPackageMasterList'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingPackageMasterList'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/Addwedding:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
          application/json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
          text/json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
            application/json:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
            text/json:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddExtraDetails:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
          application/json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
          text/json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
            application/json:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
            text/json:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetWeddingById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
            application/json:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
            text/json:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/Deletewedding:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
          application/json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
          text/json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WeddingMasterView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
            application/json:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
            text/json:
              schema:
                $ref: '#/components/schemas/WeddingMasterView'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllAllotment:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingAllotment'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingAllotment'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingAllotment'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddweddingAllotment:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WeddingAllotment'
          application/json:
            schema:
              $ref: '#/components/schemas/WeddingAllotment'
          text/json:
            schema:
              $ref: '#/components/schemas/WeddingAllotment'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WeddingAllotment'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WeddingAllotment'
            application/json:
              schema:
                $ref: '#/components/schemas/WeddingAllotment'
            text/json:
              schema:
                $ref: '#/components/schemas/WeddingAllotment'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetWeddingFoodItems:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingFoodItemList'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingFoodItemList'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingFoodItemList'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddWeddingFood:
    post:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: obj
        required: false
        schema:
          items:
            $ref: '#/components/schemas/WeddingFoodItems'
          type: array
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/DeleteWeddingFood:
    post:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetRoomType:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/RoomTypeMaster'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoomTypeMaster'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoomTypeMaster'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddUpdateRoomType:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RoomTypeViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/RoomTypeViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RoomTypeViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RoomTypeViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RoomTypeViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/RoomTypeViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RoomTypeViewModel'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllRoom:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/RoomListViewModel'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoomListViewModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoomListViewModel'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetBooking:
    get:
      parameters:
      - explode: true
        in: query
        name: month
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/RoomAllotmentList'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoomAllotmentList'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoomAllotmentList'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/AddRoom:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RoomViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/RoomViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RoomViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RoomViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RoomViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/RoomViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RoomViewModel'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/DeleteRoom:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RoomViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/RoomViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RoomViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RoomViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RoomViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/RoomViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RoomViewModel'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetRoomById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RoomViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/RoomViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RoomViewModel'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllWeddingPackages:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingPackage'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingPackage'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/WeddingPackage'
                type: array
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/CreateUpdateWeddingPackage:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WeddingPackage'
          application/json:
            schema:
              $ref: '#/components/schemas/WeddingPackage'
          text/json:
            schema:
              $ref: '#/components/schemas/WeddingPackage'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WeddingPackage'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/DeleteWeddingPackageById:
    post:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetAllBookings:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/GetBookingByBookingId:
    post:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/CreateUpdateBooking:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          text/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Booking'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Resort
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Resort/DeleteBookingById:
    post:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Resort
      x-accepts: application/json
      x-tags:
      - tag: Resort
  /api/Inventory/GetDashboardData:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - StockInventory
      x-accepts: application/json
      x-tags:
      - tag: StockInventory
  /api/Inventory/GetAllPurchase:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - StockInventory
      x-accepts: application/json
      x-tags:
      - tag: StockInventory
  /api/Inventory/CreateNewPurchase:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StockPurchase'
          application/json:
            schema:
              $ref: '#/components/schemas/StockPurchase'
          text/json:
            schema:
              $ref: '#/components/schemas/StockPurchase'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StockPurchase'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - StockInventory
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: StockInventory
  /api/Inventory/GetAllSale:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - StockInventory
      x-accepts: application/json
      x-tags:
      - tag: StockInventory
  /api/Inventory/CreateNewSale:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StockSale'
          application/json:
            schema:
              $ref: '#/components/schemas/StockSale'
          text/json:
            schema:
              $ref: '#/components/schemas/StockSale'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StockSale'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - StockInventory
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: StockInventory
  /api/Inventory/GetAllProducts:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - StockInventory
      x-accepts: application/json
      x-tags:
      - tag: StockInventory
  /api/Inventory/CreateNewProduct:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StockProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/StockProduct'
          text/json:
            schema:
              $ref: '#/components/schemas/StockProduct'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StockProduct'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - StockInventory
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: StockInventory
  /api/Inventory/GetAllStock:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - StockInventory
      x-accepts: application/json
      x-tags:
      - tag: StockInventory
  /api/Inventory/checkStockByProductId:
    get:
      parameters:
      - explode: true
        in: query
        name: productId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - StockInventory
      x-accepts: application/json
      x-tags:
      - tag: StockInventory
  /api/Tickets/GetSuperAdminDashboard:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/getEmployeeDashByEmpId:
    get:
      parameters:
      - explode: true
        in: query
        name: empId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/getAdminEmployeeDashByEmpId:
    get:
      parameters:
      - explode: true
        in: query
        name: empId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetDeptHeadDashboardByDeptHead:
    get:
      parameters:
      - explode: true
        in: query
        name: deptHeadEmpId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetAllRoles:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetDepartments:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/CreateDepartment:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReqDepartment'
          application/json:
            schema:
              $ref: '#/components/schemas/ReqDepartment'
          text/json:
            schema:
              $ref: '#/components/schemas/ReqDepartment'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReqDepartment'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/UpdateDepartment:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReqDepartment'
          application/json:
            schema:
              $ref: '#/components/schemas/ReqDepartment'
          text/json:
            schema:
              $ref: '#/components/schemas/ReqDepartment'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReqDepartment'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/DeleteDepartment:
    delete:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetEmployees:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetEmployeeById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetEmployeesByDeptId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReLogin'
          application/json:
            schema:
              $ref: '#/components/schemas/ReLogin'
          text/json:
            schema:
              $ref: '#/components/schemas/ReLogin'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReLogin'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/CreateEmployee:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReqEmployee'
          application/json:
            schema:
              $ref: '#/components/schemas/ReqEmployee'
          text/json:
            schema:
              $ref: '#/components/schemas/ReqEmployee'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReqEmployee'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/UpdateEmployee:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReqEmployee'
          application/json:
            schema:
              $ref: '#/components/schemas/ReqEmployee'
          text/json:
            schema:
              $ref: '#/components/schemas/ReqEmployee'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReqEmployee'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/DeleteEmployee:
    delete:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/AddLeave:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReqLeaf'
          application/json:
            schema:
              $ref: '#/components/schemas/ReqLeaf'
          text/json:
            schema:
              $ref: '#/components/schemas/ReqLeaf'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReqLeaf'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/ApproveLeave:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/RejectLeave:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetAllLeaves:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetAllLeavesByEmployeeId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetLeavesForApprovalBySuperwiserId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetAssignedTicketsByEmpId:
    get:
      parameters:
      - explode: true
        in: query
        name: empId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetTicketsCreatedByEmpId:
    get:
      parameters:
      - explode: true
        in: query
        name: empId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetAllTicketsByDeptHead:
    get:
      parameters:
      - explode: true
        in: query
        name: deptHeadEmpId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetAllTickets:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/getNewTickets:
    get:
      parameters:
      - explode: true
        in: query
        name: deptHeadEmpId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetTicketById:
    get:
      parameters:
      - explode: true
        in: query
        name: ticketId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/GetRequestByFilter:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RequestFilter'
          application/json:
            schema:
              $ref: '#/components/schemas/RequestFilter'
          text/json:
            schema:
              $ref: '#/components/schemas/RequestFilter'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RequestFilter'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/AssignRequest:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssignRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AssignRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/startTicket:
    post:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/closeTicket:
    post:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/CreateNewTicket:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NewTicket'
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicket'
          text/json:
            schema:
              $ref: '#/components/schemas/NewTicket'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NewTicket'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/Tickets/DeleteTicket:
    delete:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Tickets
      x-accepts: application/json
      x-tags:
      - tag: Tickets
  /api/TrainApp/GetAllStations:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/AddBulkTrainStations:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/TrainAppStation'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TrainAppStation'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/TrainAppStation'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/TrainAppStation'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/DeleteStationByStationId:
    delete:
      parameters:
      - explode: true
        in: query
        name: stationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TrainLogin'
          application/json:
            schema:
              $ref: '#/components/schemas/TrainLogin'
          text/json:
            schema:
              $ref: '#/components/schemas/TrainLogin'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TrainLogin'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/GetAllPassengers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/AddUpdatePassengers:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TrainAppPassenger'
          application/json:
            schema:
              $ref: '#/components/schemas/TrainAppPassenger'
          text/json:
            schema:
              $ref: '#/components/schemas/TrainAppPassenger'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TrainAppPassenger'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/DeletePassengerByPassengerId:
    delete:
      parameters:
      - explode: true
        in: query
        name: passengerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/GetAllTrains:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/GetTrainsBetweenStations:
    get:
      parameters:
      - explode: true
        in: query
        name: departureStationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: arrivalStationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: departureDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/AddNewTrain:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TrainAppTrain'
          application/json:
            schema:
              $ref: '#/components/schemas/TrainAppTrain'
          text/json:
            schema:
              $ref: '#/components/schemas/TrainAppTrain'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TrainAppTrain'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/DeleteTrainByTrainId:
    delete:
      parameters:
      - explode: true
        in: query
        name: trainId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/GetTrainBookings:
    get:
      parameters:
      - explode: true
        in: query
        name: departureStationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: arrivalStationId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: departureDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/GetAllTrainsBookingsPassengerList:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/GetTrainBookingPassengerListByTrainId:
    get:
      parameters:
      - explode: true
        in: query
        name: trainid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/GetBookingByPassengerId:
    get:
      parameters:
      - explode: true
        in: query
        name: passengerid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/BookTrain:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TrainAppBookingView'
          application/json:
            schema:
              $ref: '#/components/schemas/TrainAppBookingView'
          text/json:
            schema:
              $ref: '#/components/schemas/TrainAppBookingView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TrainAppBookingView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/TrainApp/CancelBookingByBookingId:
    delete:
      parameters:
      - explode: true
        in: query
        name: bookingId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - TrainApp
      x-accepts: application/json
      x-tags:
      - tag: TrainApp
  /api/User/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UserModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserModel'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - User
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/User/GetAllUsers:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/User/GetUserByUserId:
    get:
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/User/CreateNewUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/youTubeUserBasicView'
          application/json:
            schema:
              $ref: '#/components/schemas/youTubeUserBasicView'
          text/json:
            schema:
              $ref: '#/components/schemas/youTubeUserBasicView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/youTubeUserBasicView'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - User
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/User/UpdateUser:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/youTubeUserBasicView'
          application/json:
            schema:
              $ref: '#/components/schemas/youTubeUserBasicView'
          text/json:
            schema:
              $ref: '#/components/schemas/youTubeUserBasicView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/youTubeUserBasicView'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - User
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/User/DeleteUserById:
    delete:
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/User/GetAllBooking:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/User/CreateNewBooking:
    post:
      requestBody:
        content:
          multipart/form-data:
            encoding:
              BookingId:
                style: form
              Name:
                style: form
              City:
                style: form
              MobileNo:
                style: form
              State:
                style: form
              AltMobNo:
                style: form
              DateOfStay:
                style: form
              NoOfMembers:
                style: form
              IsConfirmed:
                style: form
            schema:
              $ref: '#/components/schemas/_api_User_CreateNewBooking_post_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - User
      x-content-type: multipart/form-data
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/User/UpdateBooking:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TempBooking'
          application/json:
            schema:
              $ref: '#/components/schemas/TempBooking'
          text/json:
            schema:
              $ref: '#/components/schemas/TempBooking'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TempBooking'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - User
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/User/DeleteBookingById:
    delete:
      parameters:
      - explode: true
        in: query
        name: bookingid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - User
      x-accepts: application/json
      x-tags:
      - tag: User
  /api/Values:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: Success
      tags:
      - Values
      x-accepts: application/json
      x-tags:
      - tag: Values
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: Success
      tags:
      - Values
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Values
  /api/Values/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      tags:
      - Values
      x-accepts: application/json
      x-tags:
      - tag: Values
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Success
      tags:
      - Values
      x-accepts: application/json
      x-tags:
      - tag: Values
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: Success
      tags:
      - Values
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Values
  /api/Webinar/CreateRegistration:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WebinarRegistration'
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarRegistration'
          text/json:
            schema:
              $ref: '#/components/schemas/WebinarRegistration'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WebinarRegistration'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Webinar
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Webinar
  /api/Webinar/GetAllRegistration:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Webinar
      x-accepts: application/json
      x-tags:
      - tag: Webinar
  /api/Webinar/CreateNewRegistration:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WebinarRegistrationProd'
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarRegistrationProd'
          text/json:
            schema:
              $ref: '#/components/schemas/WebinarRegistrationProd'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WebinarRegistrationProd'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Webinar
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: Webinar
  /api/Webinar/GetNewRegistration:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - Webinar
      x-accepts: application/json
      x-tags:
      - tag: Webinar
  /api/youtube/GetTicketsDashboard:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/GetAllTickets:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/GetTodaysTickets:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/GetTicketByTicketId:
    get:
      parameters:
      - explode: true
        in: query
        name: ticketId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/AddNewTicket:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/youtubeTicket'
          application/json:
            schema:
              $ref: '#/components/schemas/youtubeTicket'
          text/json:
            schema:
              $ref: '#/components/schemas/youtubeTicket'
          application/*+json:
            schema:
              $ref: '#/components/schemas/youtubeTicket'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/UpdateTicket:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/youtubeTicket'
          application/json:
            schema:
              $ref: '#/components/schemas/youtubeTicket'
          text/json:
            schema:
              $ref: '#/components/schemas/youtubeTicket'
          application/*+json:
            schema:
              $ref: '#/components/schemas/youtubeTicket'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/DeleteTicketByTicketId:
    delete:
      parameters:
      - explode: true
        in: query
        name: ticketId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/AddCity:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CityMasterData'
          application/json:
            schema:
              $ref: '#/components/schemas/CityMasterData'
          text/json:
            schema:
              $ref: '#/components/schemas/CityMasterData'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CityMasterData'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/GetAllCities:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/GetAllCitiesByDistrictId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/AddDistrict:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DistrictMasterData'
          application/json:
            schema:
              $ref: '#/components/schemas/DistrictMasterData'
          text/json:
            schema:
              $ref: '#/components/schemas/DistrictMasterData'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DistrictMasterData'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/GetAllDistrict:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/GetAllDistrictByStateId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/AddState:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StateMasterDATA'
          application/json:
            schema:
              $ref: '#/components/schemas/StateMasterDATA'
          text/json:
            schema:
              $ref: '#/components/schemas/StateMasterDATA'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StateMasterDATA'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/GetAllState:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/GetAllStateByCountryId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/AddCountry:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CountryMaster'
          application/json:
            schema:
              $ref: '#/components/schemas/CountryMaster'
          text/json:
            schema:
              $ref: '#/components/schemas/CountryMaster'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CountryMaster'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/youtube/GetAllCountry:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - youtube
      x-accepts: application/json
      x-tags:
      - tag: youtube
  /api/zomato/GetAllRestaurant:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetRestaurantByRestaurantId:
    get:
      parameters:
      - explode: true
        in: query
        name: restaurantID
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/AddNewRestaurant:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/zomatoRestaurant'
          application/json:
            schema:
              $ref: '#/components/schemas/zomatoRestaurant'
          text/json:
            schema:
              $ref: '#/components/schemas/zomatoRestaurant'
          application/*+json:
            schema:
              $ref: '#/components/schemas/zomatoRestaurant'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/UpdateRestaurant:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/zomatoRestaurant'
          application/json:
            schema:
              $ref: '#/components/schemas/zomatoRestaurant'
          text/json:
            schema:
              $ref: '#/components/schemas/zomatoRestaurant'
          application/*+json:
            schema:
              $ref: '#/components/schemas/zomatoRestaurant'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/DeleteRestaurantByRestaurantId:
    delete:
      parameters:
      - explode: true
        in: query
        name: restaurantId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetAllFoodCategory:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/AddBulkFoodCategory:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/zomatoFoodCategory'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/zomatoFoodCategory'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/zomatoFoodCategory'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/zomatoFoodCategory'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/DeleteFoodCategoryById:
    delete:
      parameters:
      - explode: true
        in: query
        name: categoryId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetAllMenu:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetAllMenuByRestaurantId:
    get:
      parameters:
      - explode: true
        in: query
        name: restaurantId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetFoodItemByCategory:
    get:
      parameters:
      - explode: true
        in: query
        name: categoryId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetRestaurantServingByCategoryId:
    get:
      parameters:
      - explode: true
        in: query
        name: categoryId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetFoodItemOfRestaurantByCategory:
    get:
      parameters:
      - explode: true
        in: query
        name: restaurantId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: categoryId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/AddBulkMenuItems:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/zomatoMenuItem'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/zomatoMenuItem'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/zomatoMenuItem'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/zomatoMenuItem'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/DeleteMenuByRestaurantId:
    delete:
      parameters:
      - explode: true
        in: query
        name: itemId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetAllUsers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetUserByUserId:
    get:
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LoginZomato'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginZomato'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginZomato'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginZomato'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/AddNewUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/zomatoUser'
          application/json:
            schema:
              $ref: '#/components/schemas/zomatoUser'
          text/json:
            schema:
              $ref: '#/components/schemas/zomatoUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/zomatoUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/UpdateUser:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/zomatoUser'
          application/json:
            schema:
              $ref: '#/components/schemas/zomatoUser'
          text/json:
            schema:
              $ref: '#/components/schemas/zomatoUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/zomatoUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/DeleteUserByUserId:
    delete:
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetAllOrders:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetAllOrdersByrestaurantId:
    get:
      parameters:
      - explode: true
        in: query
        name: restaurantId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetAllOrdersByUserId:
    get:
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetOrderByOrderId:
    get:
      parameters:
      - explode: true
        in: query
        name: orderId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/GetCartItemsByCustomerIdForRestaurant:
    get:
      parameters:
      - explode: true
        in: query
        name: customerId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: restaurantId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/AddToCart:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/zomatoCartView'
          application/json:
            schema:
              $ref: '#/components/schemas/zomatoCartView'
          text/json:
            schema:
              $ref: '#/components/schemas/zomatoCartView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/zomatoCartView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/UpdateCartQuantity:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/zomatoCartView'
          application/json:
            schema:
              $ref: '#/components/schemas/zomatoCartView'
          text/json:
            schema:
              $ref: '#/components/schemas/zomatoCartView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/zomatoCartView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/RemoveItemFromCart:
    delete:
      parameters:
      - explode: true
        in: query
        name: cartId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/AddNewOrder:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/zomatoOrderViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/zomatoOrderViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/zomatoOrderViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/zomatoOrderViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/zomato/CancelOrderByOrderId:
    delete:
      parameters:
      - explode: true
        in: query
        name: orderId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - zomato
      x-accepts: application/json
      x-tags:
      - tag: zomato
  /api/ZoomCar/GetAllCars:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/GetAllCarsByOwnerId:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/GetAllCarsByLocation:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/searchCarByLocation:
    get:
      parameters:
      - explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/GetCarById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/addNewCar:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ZoomCarView'
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomCarView'
          text/json:
            schema:
              $ref: '#/components/schemas/ZoomCarView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ZoomCarView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/UpdateCar:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ZoomCarView'
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomCarView'
          text/json:
            schema:
              $ref: '#/components/schemas/ZoomCarView'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ZoomCarView'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/DeleteCarById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/GetAllLocations:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/AddBulkLocations:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/ZoomLocation'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ZoomLocation'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ZoomLocation'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/ZoomLocation'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/DeleteLocationById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/GetAllUsers:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/GetUserByUserId:
    get:
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/Login:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
          text/json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/AddNewUser:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
          text/json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/UpdateUser:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
          text/json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ZoomUser'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/DeleteUserByUserId:
    delete:
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/GetAllBookings:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/GetAllBookingsByCarId:
    get:
      parameters:
      - explode: true
        in: query
        name: carid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/GetAllBookingsByCustomerId:
    get:
      parameters:
      - explode: true
        in: query
        name: customerid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/GetBookingById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/createNewBooking:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ZoomBooking'
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomBooking'
          text/json:
            schema:
              $ref: '#/components/schemas/ZoomBooking'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ZoomBooking'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/updateBooking:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ZoomBooking'
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomBooking'
          text/json:
            schema:
              $ref: '#/components/schemas/ZoomBooking'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ZoomBooking'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/DeleteBookingById:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/GetAllReviewByCarId:
    get:
      parameters:
      - explode: true
        in: query
        name: carid
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
  /api/ZoomCar/AddReview:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ZoomCarReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ZoomCarReview'
          text/json:
            schema:
              $ref: '#/components/schemas/ZoomCarReview'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ZoomCarReview'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Success
      tags:
      - ZoomCar
      x-content-type: application/json-patch+json
      x-accepts: application/json
      x-tags:
      - tag: ZoomCar
components:
  schemas:
    annadataCustomer:
      additionalProperties: false
      properties:
        customerId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        mobileNo:
          nullable: true
          type: string
        altMobNo:
          nullable: true
          type: string
        emailId:
          nullable: true
          type: string
        aadharCardNo:
          nullable: true
          type: string
        createdOn:
          format: date-time
          type: string
        talukaId:
          format: int32
          type: integer
      type: object
    annadataUser:
      additionalProperties: false
      properties:
        userId:
          format: int32
          type: integer
        userName:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
        createdOn:
          format: date-time
          type: string
        vendorId:
          format: int32
          nullable: true
          type: integer
        customerId:
          format: int32
          nullable: true
          type: integer
        farmerId:
          format: int32
          nullable: true
          type: integer
      type: object
    ApiResponse:
      additionalProperties: false
      example:
        Message: Message
        Data: ""
        Result: true
      properties:
        Message:
          nullable: true
          type: string
        Result:
          type: boolean
        Data:
          nullable: true
      type: object
    AssignRequest:
      additionalProperties: false
      example:
        ticketId: 0
        assignedTo: 6
      properties:
        ticketId:
          format: int32
          type: integer
        assignedTo:
          format: int32
          type: integer
      required:
      - assignedTo
      - ticketId
      type: object
    AssignTestView:
      additionalProperties: false
      example:
        registrationCode: registrationCode
        testId: 0
      properties:
        registrationCode:
          nullable: true
          type: string
        testId:
          format: int32
          type: integer
      type: object
    BigEcomCart:
      additionalProperties: false
      example:
        AddedDate: 2000-01-23T04:56:07.000+00:00
        CustId: 6
        Quantity: 5
        CartId: 0
        ProductId: 1
      properties:
        CartId:
          format: int32
          type: integer
        CustId:
          format: int32
          type: integer
        ProductId:
          format: int32
          type: integer
        Quantity:
          format: int32
          type: integer
        AddedDate:
          format: date-time
          type: string
      required:
      - CustId
      type: object
    BigEcomCategory:
      additionalProperties: false
      example:
        CategoryId: 0
        CategoryName: CategoryName
        ParentCategoryId: 6
      properties:
        CategoryId:
          format: int32
          type: integer
        CategoryName:
          type: string
        ParentCategoryId:
          format: int32
          type: integer
      required:
      - CategoryName
      type: object
    BigEcomCustomer:
      additionalProperties: false
      example:
        MobileNo: MobileNo
        CustId: 0
        Name: Name
        Password: Password
      properties:
        CustId:
          format: int32
          type: integer
        Name:
          type: string
        MobileNo:
          nullable: true
          type: string
        Password:
          nullable: true
          type: string
      required:
      - Name
      type: object
    BigEcomProduct:
      additionalProperties: false
      example:
        ProductSku: ProductSku
        CategoryId: 1
        ProductShortName: ProductShortName
        ProductName: ProductName
        ProductImageUrl: ProductImageUrl
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        ProductId: 0
        ProductPrice: 6.027456183070403
        ProductDescription: ProductDescription
        DeliveryTimeSpan: DeliveryTimeSpan
      properties:
        ProductId:
          format: int32
          type: integer
        ProductSku:
          type: string
        ProductName:
          nullable: true
          type: string
        ProductPrice:
          format: double
          type: number
        ProductShortName:
          nullable: true
          type: string
        ProductDescription:
          nullable: true
          type: string
        CreatedDate:
          format: date-time
          type: string
        DeliveryTimeSpan:
          nullable: true
          type: string
        CategoryId:
          format: int32
          type: integer
        ProductImageUrl:
          nullable: true
          type: string
      required:
      - ProductSku
      type: object
    BigEcomSale:
      additionalProperties: false
      example:
        TotalInvoiceAmount: 1.4658129805029452
        Discount: 5.962133916683182
        DeliveryLandMark: DeliveryLandMark
        CustId: 6
        DeliveryCity: DeliveryCity
        SaleId: 0
        PaymentNaration: PaymentNaration
        DeliveryPinCode: DeliveryPinCode
        SaleDate: 2000-01-23T04:56:07.000+00:00
        DeliveryAddress2: DeliveryAddress2
        DeliveryAddress1: DeliveryAddress1
      properties:
        SaleId:
          format: int32
          type: integer
        CustId:
          format: int32
          type: integer
        SaleDate:
          format: date-time
          type: string
        TotalInvoiceAmount:
          format: double
          type: number
        Discount:
          format: double
          type: number
        PaymentNaration:
          nullable: true
          type: string
        DeliveryAddress1:
          nullable: true
          type: string
        DeliveryAddress2:
          nullable: true
          type: string
        DeliveryCity:
          nullable: true
          type: string
        DeliveryPinCode:
          nullable: true
          type: string
        DeliveryLandMark:
          nullable: true
          type: string
      required:
      - CustId
      type: object
    BigUserLogin:
      additionalProperties: false
      example:
        UserName: UserName
        UserPassword: UserPassword
      properties:
        UserName:
          nullable: true
          type: string
        UserPassword:
          nullable: true
          type: string
      type: object
    Booking:
      additionalProperties: false
      example:
        MobileNo: MobileNo
        BookingDate: 2000-01-23T04:56:07.000+00:00
        CreationDate: 2000-01-23T04:56:07.000+00:00
        AdvanceAmount: 2.3021358869347655
        IsDeleted: true
        Discount: 9.301444243932576
        NoOfMembers: 1
        AltMobNo: AltMobNo
        TotalAmount: 5.637376656633329
        IsConfirmed: true
        ServiceId: 6
        CreatedByUserId: 5
        BookingId: 0
        CustomerName: CustomerName
        Naration: Naration
        RemainingPaidAmount: 7.061401241503109
        IsWithFood: true
      properties:
        BookingId:
          format: int32
          type: integer
        CustomerName:
          nullable: true
          type: string
        MobileNo:
          nullable: true
          type: string
        AltMobNo:
          nullable: true
          type: string
        ServiceId:
          format: int32
          type: integer
        NoOfMembers:
          format: int32
          type: integer
        CreationDate:
          format: date-time
          type: string
        IsWithFood:
          type: boolean
        BookingDate:
          format: date-time
          type: string
        CreatedByUserId:
          format: int32
          type: integer
        TotalAmount:
          format: double
          type: number
        AdvanceAmount:
          format: double
          type: number
        RemainingPaidAmount:
          format: double
          nullable: true
          type: number
        IsConfirmed:
          type: boolean
        Naration:
          nullable: true
          type: string
        Discount:
          format: double
          type: number
        IsDeleted:
          type: boolean
      type: object
    CityMaster:
      additionalProperties: false
      example:
        districtId: 6
        cityName: cityName
        cityId: 0
      properties:
        cityId:
          format: int32
          type: integer
        cityName:
          nullable: true
          type: string
        districtId:
          format: int32
          type: integer
      type: object
    CityMasterData:
      additionalProperties: false
      example:
        districtId: 6
        cityName: cityName
        cityId: 0
      properties:
        cityId:
          format: int32
          type: integer
        cityName:
          type: string
        districtId:
          format: int32
          type: integer
      required:
      - cityName
      - districtId
      type: object
    CountryMaster:
      additionalProperties: false
      example:
        CountryId: 0
        CountryName: CountryName
      properties:
        CountryId:
          format: int32
          type: integer
        CountryName:
          type: string
      required:
      - CountryName
      type: object
    CreateGoalView:
      additionalProperties: false
      example:
        goalTitle: goalTitle
        goalDescription: goalDescription
        goalId: 0
        goalExpectedEndDate: 2000-01-23T04:56:07.000+00:00
        GoalMileStones:
        - milestoneDetails: milestoneDetails
          goalId: 5
          expectedEndDate: 2000-01-23T04:56:07.000+00:00
          milestoneId: 5
          milestoneTitle: milestoneTitle
          isCompleted: true
        - milestoneDetails: milestoneDetails
          goalId: 5
          expectedEndDate: 2000-01-23T04:56:07.000+00:00
          milestoneId: 5
          milestoneTitle: milestoneTitle
          isCompleted: true
        goalCategoryId: 1
        userId: 6
        goalStartDate: 2000-01-23T04:56:07.000+00:00
        isCompleted: true
      properties:
        goalId:
          format: int32
          type: integer
        userId:
          format: int32
          type: integer
        goalTitle:
          type: string
        goalDescription:
          type: string
        goalStartDate:
          format: date-time
          type: string
        goalExpectedEndDate:
          format: date-time
          nullable: true
          type: string
        goalCategoryId:
          format: int32
          type: integer
        isCompleted:
          type: boolean
        GoalMileStones:
          items:
            $ref: '#/components/schemas/GoalMileStone'
          nullable: true
          type: array
      required:
      - goalCategoryId
      - goalDescription
      - goalStartDate
      - goalTitle
      - userId
      type: object
    DashModel:
      additionalProperties: false
      example:
        TotEnquiry: 0
        TotCustomer: 1
        TotResortBooking: 6
        TotWeddingBooking: 2
        TotRoom: 5
        TotRoomBooking: 5
      properties:
        TotEnquiry:
          format: int32
          type: integer
        TotResortBooking:
          format: int32
          type: integer
        TotCustomer:
          format: int32
          type: integer
        TotRoom:
          format: int32
          type: integer
        TotRoomBooking:
          format: int32
          type: integer
        TotWeddingBooking:
          format: int32
          type: integer
      type: object
    DashModelToday:
      additionalProperties: false
      example:
        TodayEnquiry: 0
        TodayWVisit: 6
        TodayVisit: 5
        TodayRVisit: 1
        TodayFoodOrder: 2
        TodayWedding: 5
      properties:
        TodayEnquiry:
          format: int32
          type: integer
        TodayWVisit:
          format: int32
          type: integer
        TodayRVisit:
          format: int32
          type: integer
        TodayVisit:
          format: int32
          type: integer
        TodayWedding:
          format: int32
          type: integer
        TodayFoodOrder:
          format: int32
          type: integer
      type: object
    dataGraph:
      additionalProperties: false
      example:
        date: 2000-01-23T04:56:07.000+00:00
        value: 0
      properties:
        value:
          format: int32
          type: integer
        date:
          format: date-time
          type: string
      type: object
    DistrictMaster:
      additionalProperties: false
      example:
        districtId: 0
        districtName: districtName
        stateId: 6
      properties:
        districtId:
          format: int32
          type: integer
        districtName:
          nullable: true
          type: string
        stateId:
          format: int32
          nullable: true
          type: integer
      type: object
    DistrictMasterData:
      additionalProperties: false
      example:
        districtId: 0
        districtName: districtName
        stateId: 6
      properties:
        districtId:
          format: int32
          type: integer
        districtName:
          type: string
        stateId:
          format: int32
          type: integer
      required:
      - districtName
      - stateId
      type: object
    EcomCart:
      additionalProperties: false
      example:
        AddedDate: 2000-01-23T04:56:07.000+00:00
        CustId: 6
        Quantity: 5
        CartId: 0
        ProductId: 1
      properties:
        CartId:
          format: int32
          type: integer
        CustId:
          format: int32
          type: integer
        ProductId:
          format: int32
          type: integer
        Quantity:
          format: int32
          type: integer
        AddedDate:
          format: date-time
          type: string
      required:
      - CustId
      type: object
    EcomCategory:
      additionalProperties: false
      example:
        CategoryId: 0
        CategoryName: CategoryName
        ParentCategoryId: 6
      properties:
        CategoryId:
          format: int32
          type: integer
        CategoryName:
          type: string
        ParentCategoryId:
          format: int32
          type: integer
      required:
      - CategoryName
      type: object
    EcomCustomer:
      additionalProperties: false
      example:
        MobileNo: MobileNo
        CustId: 0
        Name: Name
        Password: Password
      properties:
        CustId:
          format: int32
          type: integer
        Name:
          type: string
        MobileNo:
          nullable: true
          type: string
        Password:
          nullable: true
          type: string
      required:
      - Name
      type: object
    EcomProduct:
      additionalProperties: false
      example:
        ProductSku: ProductSku
        CategoryId: 1
        ProductShortName: ProductShortName
        ProductName: ProductName
        ProductImageUrl: ProductImageUrl
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        ProductId: 0
        ProductPrice: 6.027456183070403
        ProductDescription: ProductDescription
        DeliveryTimeSpan: DeliveryTimeSpan
      properties:
        ProductId:
          format: int32
          type: integer
        ProductSku:
          type: string
        ProductName:
          nullable: true
          type: string
        ProductPrice:
          format: double
          type: number
        ProductShortName:
          nullable: true
          type: string
        ProductDescription:
          nullable: true
          type: string
        CreatedDate:
          format: date-time
          type: string
        DeliveryTimeSpan:
          nullable: true
          type: string
        CategoryId:
          format: int32
          type: integer
        ProductImageUrl:
          nullable: true
          type: string
      required:
      - ProductSku
      type: object
    EcomSale:
      additionalProperties: false
      example:
        TotalInvoiceAmount: 1.4658129805029452
        Discount: 5.962133916683182
        DeliveryLandMark: DeliveryLandMark
        CustId: 6
        DeliveryCity: DeliveryCity
        SaleId: 0
        PaymentNaration: PaymentNaration
        DeliveryPinCode: DeliveryPinCode
        SaleDate: 2000-01-23T04:56:07.000+00:00
        DeliveryAddress2: DeliveryAddress2
        DeliveryAddress1: DeliveryAddress1
      properties:
        SaleId:
          format: int32
          type: integer
        CustId:
          format: int32
          type: integer
        SaleDate:
          format: date-time
          type: string
        TotalInvoiceAmount:
          format: double
          type: number
        Discount:
          format: double
          type: number
        PaymentNaration:
          nullable: true
          type: string
        DeliveryAddress1:
          nullable: true
          type: string
        DeliveryAddress2:
          nullable: true
          type: string
        DeliveryCity:
          nullable: true
          type: string
        DeliveryPinCode:
          nullable: true
          type: string
        DeliveryLandMark:
          nullable: true
          type: string
      required:
      - CustId
      type: object
    EnquirySearch:
      additionalProperties: false
      example:
        FrDate: 2000-01-23T04:56:07.000+00:00
        ContactNo: ContactNo
        ReferenceId: 5
        PageSize: 2
        PageNumber: 5
        UserId: 0
        StatusId: 6
        ToDate: 2000-01-23T04:56:07.000+00:00
        MasterId: 1
        Name: Name
      properties:
        Name:
          nullable: true
          type: string
        UserId:
          format: int32
          nullable: true
          type: integer
        ContactNo:
          nullable: true
          type: string
        StatusId:
          format: int32
          nullable: true
          type: integer
        MasterId:
          format: int32
          nullable: true
          type: integer
        ReferenceId:
          format: int32
          nullable: true
          type: integer
        FrDate:
          format: date-time
          nullable: true
          type: string
        ToDate:
          format: date-time
          nullable: true
          type: string
        PageNumber:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
      type: object
    EnquiryView:
      additionalProperties: false
      example:
        EnquiryDate: 2000-01-23T04:56:07.000+00:00
        EmailId: EmailId
        UserName: UserName
        Message: Message
        FeedBack: FeedBack
        Reference: Reference
        EnquiryId: 0
        CustomerId: 5
        Subject: Subject
        Name: Name
        Result: true
        OtherRef: OtherRef
        FollowUpDate: 2000-01-23T04:56:07.000+00:00
        EnquiryStatus: EnquiryStatus
        ContactNo: ContactNo
        Details: Details
        ReferenceId: 6
        AltContactNo: AltContactNo
        UserId: 5
        StatusId: 1
        MasterId: 2
      properties:
        EnquiryId:
          format: int32
          type: integer
        Name:
          nullable: true
          type: string
        Subject:
          nullable: true
          type: string
        Details:
          nullable: true
          type: string
        EnquiryStatus:
          nullable: true
          type: string
        ContactNo:
          nullable: true
          type: string
        EnquiryDate:
          format: date-time
          nullable: true
          type: string
        ReferenceId:
          format: int32
          nullable: true
          type: integer
        Message:
          nullable: true
          type: string
        Reference:
          nullable: true
          type: string
        StatusId:
          format: int32
          type: integer
        Result:
          type: boolean
        EmailId:
          nullable: true
          type: string
        FeedBack:
          nullable: true
          type: string
        AltContactNo:
          nullable: true
          type: string
        UserId:
          format: int32
          type: integer
        UserName:
          nullable: true
          type: string
        CustomerId:
          format: int32
          nullable: true
          type: integer
        OtherRef:
          nullable: true
          type: string
        MasterId:
          format: int32
          nullable: true
          type: integer
        FollowUpDate:
          format: date-time
          nullable: true
          type: string
      type: object
    ErmClient:
      additionalProperties: false
      example:
        regNo: regNo
        pincode: pincode
        clientId: 0
        contactPersonName: contactPersonName
        address: address
        city: city
        companyName: companyName
        gstNo: gstNo
        state: state
        EmployeeStrength: 6
        contactNo: contactNo
      properties:
        clientId:
          format: int32
          type: integer
        contactPersonName:
          nullable: true
          type: string
        companyName:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        pincode:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        EmployeeStrength:
          format: int32
          type: integer
        gstNo:
          nullable: true
          type: string
        contactNo:
          nullable: true
          type: string
        regNo:
          nullable: true
          type: string
      type: object
    ErmClientProject:
      additionalProperties: false
      example:
        clientId: 5
        contactPerson: contactPerson
        projectDetails: projectDetails
        clientProjectId: 0
        completedDate: 2000-01-23T04:56:07.000+00:00
        expectedEndDate: 2000-01-23T04:56:07.000+00:00
        contactPersonContactNo: contactPersonContactNo
        projectCost: 5.962133916683182
        projectName: projectName
        contactPersonEmailId: contactPersonEmailId
        leadByEmpId: 6
        startDate: 2000-01-23T04:56:07.000+00:00
        totalEmpWorking: 1
      properties:
        clientProjectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        expectedEndDate:
          format: date-time
          nullable: true
          type: string
        leadByEmpId:
          format: int32
          type: integer
        completedDate:
          format: date-time
          nullable: true
          type: string
        contactPerson:
          nullable: true
          type: string
        contactPersonContactNo:
          nullable: true
          type: string
        totalEmpWorking:
          format: int32
          type: integer
        projectCost:
          format: double
          type: number
        projectDetails:
          nullable: true
          type: string
        contactPersonEmailId:
          nullable: true
          type: string
        clientId:
          format: int32
          type: integer
      type: object
    ErmEmpExperience:
      additionalProperties: false
      example:
        empExpId: 7
        empId: 9
        endDate: 2000-01-23T04:56:07.000+00:00
        companyName: companyName
        projectsWorkedOn: projectsWorkedOn
        designation: designation
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        empExpId:
          format: int32
          type: integer
        empId:
          format: int32
          type: integer
        companyName:
          nullable: true
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        designation:
          nullable: true
          type: string
        projectsWorkedOn:
          nullable: true
          type: string
      type: object
    ErmEmployeeView:
      additionalProperties: false
      example:
        ErmEmpExperiences:
        - empExpId: 7
          empId: 9
          endDate: 2000-01-23T04:56:07.000+00:00
          companyName: companyName
          projectsWorkedOn: projectsWorkedOn
          designation: designation
          startDate: 2000-01-23T04:56:07.000+00:00
        - empExpId: 7
          empId: 9
          endDate: 2000-01-23T04:56:07.000+00:00
          companyName: companyName
          projectsWorkedOn: projectsWorkedOn
          designation: designation
          startDate: 2000-01-23T04:56:07.000+00:00
        empId: 0
        empAltContactNo: empAltContactNo
        empPerPinCode: empPerPinCode
        ErpEmployeeSkills:
        - totalYearExp: 2
          empId: 5
          empSkillId: 5
          skill: skill
          lastVersionUsed: lastVersionUsed
        - totalYearExp: 2
          empId: 5
          empSkillId: 5
          skill: skill
          lastVersionUsed: lastVersionUsed
        empPersonalEmailId: empPersonalEmailId
        empCity: empCity
        empState: empState
        empPerState: empPerState
        empContactNo: empContactNo
        password: password
        empPerCity: empPerCity
        empPerAddress: empPerAddress
        empPinCode: empPinCode
        empDesignation: empDesignation
        empName: empName
        empEmailId: empEmailId
        empExpTotalYear: 6
        empAddress: empAddress
        empExpTotalMonth: 1
      properties:
        empId:
          format: int32
          type: integer
        empName:
          nullable: true
          type: string
        empEmailId:
          nullable: true
          type: string
        empDesignation:
          nullable: true
          type: string
        empContactNo:
          nullable: true
          type: string
        empAltContactNo:
          nullable: true
          type: string
        empPersonalEmailId:
          nullable: true
          type: string
        empExpTotalYear:
          format: int32
          nullable: true
          type: integer
        empExpTotalMonth:
          format: int32
          nullable: true
          type: integer
        empCity:
          nullable: true
          type: string
        empState:
          nullable: true
          type: string
        empPinCode:
          nullable: true
          type: string
        empAddress:
          nullable: true
          type: string
        empPerCity:
          nullable: true
          type: string
        empPerState:
          nullable: true
          type: string
        empPerPinCode:
          nullable: true
          type: string
        empPerAddress:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        ErpEmployeeSkills:
          items:
            $ref: '#/components/schemas/ErpEmployeeSkill'
          nullable: true
          type: array
        ErmEmpExperiences:
          items:
            $ref: '#/components/schemas/ErmEmpExperience'
          nullable: true
          type: array
      type: object
    ErpEmployeeSkill:
      additionalProperties: false
      example:
        totalYearExp: 2
        empId: 5
        empSkillId: 5
        skill: skill
        lastVersionUsed: lastVersionUsed
      properties:
        empSkillId:
          format: int32
          type: integer
        empId:
          format: int32
          type: integer
        skill:
          nullable: true
          type: string
        totalYearExp:
          format: int32
          type: integer
        lastVersionUsed:
          nullable: true
          type: string
      type: object
    ErpProjectChange:
      additionalProperties: false
      example:
        changeDate: 2000-01-23T04:56:07.000+00:00
        projectChangeId: 0
        projectId: 6
        approvedByEmpId: 1
        changeDetails: changeDetails
      properties:
        projectChangeId:
          format: int32
          type: integer
        projectId:
          format: int32
          type: integer
        changeDetails:
          nullable: true
          type: string
        changeDate:
          format: date-time
          type: string
        approvedByEmpId:
          format: int32
          nullable: true
          type: integer
      type: object
    ErpProjectMeeting:
      additionalProperties: false
      example:
        meetingNotes: meetingNotes
        meetingStatus: meetingStatus
        meetingLeadByEmpId: 1
        meetingMedium: meetingMedium
        meetingTitle: meetingTitle
        isRecordingAvailable: true
        clientPersonNames: clientPersonNames
        projectMeetingId: 0
        recordingUrl: recordingUrl
        meetingDate: 2000-01-23T04:56:07.000+00:00
        startTime: startTime
        endTime: endTime
        projectId: 6
      properties:
        projectMeetingId:
          format: int32
          type: integer
        projectId:
          format: int32
          type: integer
        meetingLeadByEmpId:
          format: int32
          type: integer
        meetingDate:
          format: date-time
          type: string
        startTime:
          nullable: true
          type: string
        endTime:
          nullable: true
          type: string
        meetingMedium:
          nullable: true
          type: string
        isRecordingAvailable:
          nullable: true
          type: boolean
        recordingUrl:
          nullable: true
          type: string
        meetingNotes:
          nullable: true
          type: string
        clientPersonNames:
          nullable: true
          type: string
        meetingTitle:
          nullable: true
          type: string
        meetingStatus:
          nullable: true
          type: string
      type: object
    ErpProjectPayment:
      additionalProperties: false
      example:
        projectPaymentId: 0
        amount: 1.4658129805029452
        paymentMode: paymentMode
        naration: naration
        paymentDate: 2000-01-23T04:56:07.000+00:00
        projectId: 6
      properties:
        projectPaymentId:
          format: int32
          type: integer
        projectId:
          format: int32
          type: integer
        paymentDate:
          format: date-time
          type: string
        paymentMode:
          nullable: true
          type: string
        amount:
          format: double
          type: number
        naration:
          nullable: true
          type: string
      type: object
    EventBookingMember:
      additionalProperties: false
      example:
        CardNo: CardNo
        ContactNo: ContactNo
        BookingId: 2
        BookingMemberId: 5
        Age: 7
        Name: Name
        IdentityCard: IdentityCard
      properties:
        BookingMemberId:
          format: int32
          type: integer
        BookingId:
          format: int32
          type: integer
        Name:
          nullable: true
          type: string
        Age:
          format: int32
          type: integer
        IdentityCard:
          nullable: true
          type: string
        CardNo:
          nullable: true
          type: string
        ContactNo:
          nullable: true
          type: string
      type: object
    EventBookingViewModel:
      additionalProperties: false
      example:
        EventBookingMembers:
        - CardNo: CardNo
          ContactNo: ContactNo
          BookingId: 2
          BookingMemberId: 5
          Age: 7
          Name: Name
          IdentityCard: IdentityCard
        - CardNo: CardNo
          ContactNo: ContactNo
          BookingId: 2
          BookingMemberId: 5
          Age: 7
          Name: Name
          IdentityCard: IdentityCard
        NoOfTickets: 5
        UserId: 6
        BookingId: 0
        EventId: 1
      properties:
        BookingId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        EventId:
          format: int32
          type: integer
        NoOfTickets:
          format: int32
          type: integer
        EventBookingMembers:
          items:
            $ref: '#/components/schemas/EventBookingMember'
          nullable: true
          type: array
      type: object
    EventFilter:
      additionalProperties: false
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        OrganizerId: 0
        EventName: EventName
        EndDate: 2000-01-23T04:56:07.000+00:00
        Location: Location
      properties:
        EventName:
          nullable: true
          type: string
        Location:
          nullable: true
          type: string
        StartDate:
          format: date-time
          nullable: true
          type: string
        EndDate:
          format: date-time
          nullable: true
          type: string
        OrganizerId:
          format: int32
          nullable: true
          type: integer
      type: object
    EventLoginUser:
      additionalProperties: false
      example:
        ContactNo: ContactNo
        Password: Password
      properties:
        Password:
          nullable: true
          type: string
        ContactNo:
          nullable: true
          type: string
      type: object
    EventMaster:
      additionalProperties: false
      example:
        IsCoupleEntryMandatory: true
        Description: Description
        EndTime: EndTime
        StartTime: StartTime
        ImageUrl: ImageUrl
        OrganizerId: 1
        EventName: EventName
        EndDate: 2000-01-23T04:56:07.000+00:00
        StartDate: 2000-01-23T04:56:07.000+00:00
        IsIdentityMandatory: true
        Capacity: Capacity
        Price: 6.027456183070403
        EventId: 0
        Location: Location
      properties:
        EventId:
          format: int32
          type: integer
        EventName:
          nullable: true
          type: string
        Description:
          nullable: true
          type: string
        Location:
          nullable: true
          type: string
        StartDate:
          format: date-time
          nullable: true
          type: string
        StartTime:
          nullable: true
          type: string
        EndDate:
          format: date-time
          nullable: true
          type: string
        EndTime:
          nullable: true
          type: string
        ImageUrl:
          nullable: true
          type: string
        Capacity:
          nullable: true
          type: string
        Price:
          format: double
          type: number
        OrganizerId:
          format: int32
          type: integer
        IsIdentityMandatory:
          type: boolean
        IsCoupleEntryMandatory:
          type: boolean
      type: object
    EventUser:
      additionalProperties: false
      example:
        Role: Role
        ContactNo: ContactNo
        Email: Email
        UserId: 0
        Name: Name
        Password: Password
      properties:
        UserId:
          format: int32
          type: integer
        Name:
          nullable: true
          type: string
        Email:
          nullable: true
          type: string
        Password:
          nullable: true
          type: string
        ContactNo:
          nullable: true
          type: string
        Role:
          nullable: true
          type: string
      type: object
    Executive:
      additionalProperties: false
      example:
        talukaId: 6
        executiveId: 0
        name: name
        emailId: emailId
        highestEducation: highestEducation
        mobileNo: mobileNo
        aadharNo: aadharNo
        parentExecutiveId: 1
      properties:
        executiveId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        mobileNo:
          nullable: true
          type: string
        emailId:
          nullable: true
          type: string
        talukaId:
          format: int32
          type: integer
        highestEducation:
          nullable: true
          type: string
        aadharNo:
          nullable: true
          type: string
        parentExecutiveId:
          format: int32
          type: integer
      type: object
    ExtraWeddingDetail:
      additionalProperties: false
      example:
        DetailId: 7
        Requirment: Requirment
        Rate: 5.025004791520295
        NoOfPax: 4
        Total: 9.965781217890562
        WeddingId: 9
        ServiceId: 1
      properties:
        DetailId:
          format: int32
          type: integer
        ServiceId:
          format: int32
          type: integer
        NoOfPax:
          format: int32
          type: integer
        Rate:
          format: double
          type: number
        Total:
          format: double
          type: number
        WeddingId:
          format: int32
          type: integer
        Requirment:
          nullable: true
          type: string
      type: object
    FarmerFilter:
      additionalProperties: false
      example:
        districtId: 1
        isFalbagAvailable: true
        isOrganicFarming: true
        talukaId: 0
        isFarmHouse: true
        isTourAvailable: true
        isDryLandFarming: true
        fullName: fullName
        aadharCardNo: aadharCardNo
        cityId: 6
        contactNo: contactNo
      properties:
        fullName:
          nullable: true
          type: string
        aadharCardNo:
          nullable: true
          type: string
        talukaId:
          format: int32
          nullable: true
          type: integer
        cityId:
          format: int32
          nullable: true
          type: integer
        districtId:
          format: int32
          nullable: true
          type: integer
        isDryLandFarming:
          nullable: true
          type: boolean
        isFalbagAvailable:
          nullable: true
          type: boolean
        isOrganicFarming:
          nullable: true
          type: boolean
        isFarmHouse:
          nullable: true
          type: boolean
        isTourAvailable:
          nullable: true
          type: boolean
        contactNo:
          nullable: true
          type: string
      type: object
    FarmerFoodItem:
      additionalProperties: false
      example:
        farmerId: 5
        foodItemId: 5
        farmerFoodItemId: 1
      properties:
        farmerFoodItemId:
          format: int32
          type: integer
        foodItemId:
          format: int32
          type: integer
        farmerId:
          format: int32
          type: integer
      type: object
    FarmerMasterView:
      additionalProperties: false
      example:
        FarmerFoodItems:
        - farmerId: 5
          foodItemId: 5
          farmerFoodItemId: 1
        - farmerId: 5
          foodItemId: 5
          farmerFoodItemId: 1
        farmAddress: farmAddress
        farmTotalAcre: farmTotalAcre
        isFalbagAvailable: true
        isFarmHouse: true
        isDryLandFarming: true
        fullName: fullName
        aadharCardNo: aadharCardNo
        photoUrl: photoUrl
        farmerId: 0
        isOrganicFarming: true
        createdDate: 2000-01-23T04:56:07.000+00:00
        talukaId: 6
        isTourAvailable: true
        isRoadAvailable: true
        isWellAvailable: true
        altContactNo: altContactNo
        homeAddress: homeAddress
        contactNo: contactNo
      properties:
        farmerId:
          format: int32
          type: integer
        fullName:
          nullable: true
          type: string
        aadharCardNo:
          nullable: true
          type: string
        talukaId:
          format: int32
          type: integer
        homeAddress:
          nullable: true
          type: string
        farmAddress:
          nullable: true
          type: string
        farmTotalAcre:
          nullable: true
          type: string
        isDryLandFarming:
          nullable: true
          type: boolean
        isFalbagAvailable:
          nullable: true
          type: boolean
        isWellAvailable:
          nullable: true
          type: boolean
        isOrganicFarming:
          nullable: true
          type: boolean
        isFarmHouse:
          type: boolean
        isTourAvailable:
          nullable: true
          type: boolean
        createdDate:
          format: date-time
          nullable: true
          type: string
        isRoadAvailable:
          nullable: true
          type: boolean
        photoUrl:
          nullable: true
          type: string
        contactNo:
          nullable: true
          type: string
        altContactNo:
          nullable: true
          type: string
        FarmerFoodItems:
          items:
            $ref: '#/components/schemas/FarmerFoodItem'
          nullable: true
          type: array
      type: object
    FarmerVerificationModel:
      additionalProperties: false
      example:
        farmerId: 0
        executiveId: 6
      properties:
        farmerId:
          format: int32
          type: integer
        executiveId:
          format: int32
          type: integer
      type: object
    FilterhotelBooking:
      additionalProperties: false
      example:
        bookingFromDate: 2000-01-23T04:56:07.000+00:00
        bookingToDate: 2000-01-23T04:56:07.000+00:00
        createdBy: 6
        name: name
        mobileNo: mobileNo
        aadharNo: aadharNo
        roomId: 0
      properties:
        roomId:
          format: int32
          nullable: true
          type: integer
        aadharNo:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        mobileNo:
          nullable: true
          type: string
        bookingFromDate:
          format: date-time
          nullable: true
          type: string
        bookingToDate:
          format: date-time
          nullable: true
          type: string
        createdBy:
          format: int32
          nullable: true
          type: integer
      type: object
    FoodCategoryMaster:
      additionalProperties: false
      example:
        foodCategoryId: 0
        createdDate: 2000-01-23T04:56:07.000+00:00
        isActive: true
        foodCategoryName: foodCategoryName
      properties:
        foodCategoryId:
          format: int32
          type: integer
        foodCategoryName:
          nullable: true
          type: string
        isActive:
          nullable: true
          type: boolean
        createdDate:
          format: date-time
          type: string
      type: object
    FoodItemList:
      additionalProperties: false
      example:
        FoodItemTypeId: 5
        FullPrice: 6.027456183070403
        IsDeleted: true
        IsVeg: true
        IsHalf: true
        IsAvailable: true
        ItemName: ItemName
        HalfPrice: 1.4658129805029452
        FoodItemName: FoodItemName
        ItemId: 0
      properties:
        ItemId:
          format: int32
          type: integer
        ItemName:
          nullable: true
          type: string
        IsVeg:
          type: boolean
        FullPrice:
          format: double
          type: number
        HalfPrice:
          format: double
          type: number
        IsAvailable:
          type: boolean
        IsDeleted:
          type: boolean
        IsHalf:
          nullable: true
          type: boolean
        FoodItemTypeId:
          format: int32
          type: integer
        FoodItemName:
          nullable: true
          type: string
      type: object
    FoodItemMaster:
      additionalProperties: false
      example:
        foodCategoryId: 6
        createdDate: 2000-01-23T04:56:07.000+00:00
        shelfLifePeriod: shelfLifePeriod
        foodItemName: foodItemName
        imageUrl: imageUrl
        foodItemId: 0
        isSeasonal: true
        isActive: true
        packagingType: packagingType
      properties:
        foodItemId:
          format: int32
          type: integer
        foodCategoryId:
          format: int32
          type: integer
        foodItemName:
          nullable: true
          type: string
        isActive:
          nullable: true
          type: boolean
        createdDate:
          format: date-time
          nullable: true
          type: string
        isSeasonal:
          nullable: true
          type: boolean
        packagingType:
          nullable: true
          type: string
        shelfLifePeriod:
          nullable: true
          type: string
        imageUrl:
          nullable: true
          type: string
      type: object
    FoodItemType:
      additionalProperties: false
      example:
        FoodItemTypeId: 0
        IsDeleted: true
        FoodItemName: FoodItemName
      properties:
        FoodItemTypeId:
          format: int32
          type: integer
        FoodItemName:
          nullable: true
          type: string
        IsDeleted:
          type: boolean
      type: object
    FoodItemView:
      additionalProperties: false
      example:
        FoodItemTypeId: 5
        FullPrice: 6.027456183070403
        IsVeg: true
        Message: Message
        IsHalf: true
        IsAvailable: true
        ItemName: ItemName
        HalfPrice: 1.4658129805029452
        ItemId: 0
        Result: true
      properties:
        ItemId:
          format: int32
          type: integer
        ItemName:
          nullable: true
          type: string
        IsVeg:
          type: boolean
        FullPrice:
          format: double
          type: number
        HalfPrice:
          format: double
          type: number
        IsAvailable:
          type: boolean
        IsHalf:
          nullable: true
          type: boolean
        FoodItemTypeId:
          format: int32
          type: integer
        Message:
          nullable: true
          type: string
        Result:
          type: boolean
      type: object
    FoodOrder:
      additionalProperties: false
      example:
        MobileNo: MobileNo
        OrderStatus: OrderStatus
        OrderUniqeId: OrderUniqeId
        UserId: 5
        BookingId: 5
        OrderNo: 2
        OrderId: 0
        OrderTotal: 1.4658129805029452
        Name: Name
        ServiceId: 6
        OrderDate: 2000-01-23T04:56:07.000+00:00
      properties:
        OrderId:
          format: int32
          type: integer
        Name:
          nullable: true
          type: string
        ServiceId:
          format: int32
          nullable: true
          type: integer
        MobileNo:
          nullable: true
          type: string
        OrderDate:
          format: date-time
          type: string
        OrderTotal:
          format: double
          type: number
        BookingId:
          format: int32
          nullable: true
          type: integer
        UserId:
          format: int32
          type: integer
        OrderStatus:
          nullable: true
          type: string
        OrderNo:
          format: int32
          type: integer
        OrderUniqeId:
          nullable: true
          type: string
      type: object
    FoodOrderItem:
      additionalProperties: false
      example:
        Rate: 3.616076749251911
        Total: 4.145608029883936
        Quantity: 9
        Naration: Naration
        OrderId: 2
        ItemId: 7
        OrderItemId: 2
      properties:
        OrderItemId:
          format: int32
          type: integer
        ItemId:
          format: int32
          type: integer
        Quantity:
          format: int32
          type: integer
        Rate:
          format: double
          type: number
        Naration:
          nullable: true
          type: string
        OrderId:
          format: int32
          type: integer
        Total:
          format: double
          type: number
      type: object
    FoodOrderItemView:
      additionalProperties: false
      example:
        Rate: 3.616076749251911
        Total: 4.145608029883936
        Quantity: 9
        Naration: Naration
        OrderId: 2
        ItemId: 7
        OrderItemId: 2
        Name: Name
      properties:
        OrderItemId:
          format: int32
          type: integer
        ItemId:
          format: int32
          type: integer
        Quantity:
          format: int32
          type: integer
        Rate:
          format: double
          type: number
        Naration:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        OrderId:
          format: int32
          type: integer
        Total:
          format: double
          type: number
      type: object
    FoodOrderOpen:
      additionalProperties: false
      example:
        MobileNo: MobileNo
        Message: Message
        OrderNo: 5
        OrderId: 0
        Name: Name
        OrderDate: 2000-01-23T04:56:07.000+00:00
        Result: true
        OrderStatus: OrderStatus
        OrderUniqeId: OrderUniqeId
        FoodOrderItems:
        - Rate: 3.616076749251911
          Total: 4.145608029883936
          Quantity: 9
          Naration: Naration
          OrderId: 2
          ItemId: 7
          OrderItemId: 2
          Name: Name
        - Rate: 3.616076749251911
          Total: 4.145608029883936
          Quantity: 9
          Naration: Naration
          OrderId: 2
          ItemId: 7
          OrderItemId: 2
          Name: Name
        UserId: 5
        BookingId: 1
        OrderTotal: 6.027456183070403
      properties:
        OrderId:
          format: int32
          type: integer
        Name:
          nullable: true
          type: string
        MobileNo:
          nullable: true
          type: string
        OrderDate:
          format: date-time
          type: string
        OrderTotal:
          format: double
          type: number
        OrderUniqeId:
          nullable: true
          type: string
        OrderStatus:
          nullable: true
          type: string
        BookingId:
          format: int32
          nullable: true
          type: integer
        UserId:
          format: int32
          type: integer
        OrderNo:
          format: int32
          type: integer
        Message:
          nullable: true
          type: string
        Result:
          type: boolean
        FoodOrderItems:
          items:
            $ref: '#/components/schemas/FoodOrderItemView'
          nullable: true
          type: array
      type: object
    FoodOrderView:
      additionalProperties: false
      example:
        MobileNo: MobileNo
        Message: Message
        OrderNo: 5
        OrderId: 0
        Name: Name
        OrderDate: 2000-01-23T04:56:07.000+00:00
        Result: true
        OrderStatus: OrderStatus
        OrderUniqeId: OrderUniqeId
        FoodOrderItems:
        - Rate: 3.616076749251911
          Total: 4.145608029883936
          Quantity: 9
          Naration: Naration
          OrderId: 2
          ItemId: 7
          OrderItemId: 2
        - Rate: 3.616076749251911
          Total: 4.145608029883936
          Quantity: 9
          Naration: Naration
          OrderId: 2
          ItemId: 7
          OrderItemId: 2
        UserId: 5
        BookingId: 1
        OrderTotal: 6.027456183070403
      properties:
        OrderId:
          format: int32
          type: integer
        Name:
          nullable: true
          type: string
        MobileNo:
          nullable: true
          type: string
        OrderDate:
          format: date-time
          type: string
        OrderTotal:
          format: double
          type: number
        OrderUniqeId:
          nullable: true
          type: string
        OrderStatus:
          nullable: true
          type: string
        BookingId:
          format: int32
          nullable: true
          type: integer
        UserId:
          format: int32
          type: integer
        OrderNo:
          format: int32
          type: integer
        Message:
          nullable: true
          type: string
        Result:
          type: boolean
        FoodOrderItems:
          items:
            $ref: '#/components/schemas/FoodOrderItem'
          nullable: true
          type: array
      type: object
    GoalCategory:
      additionalProperties: false
      example:
        imageUrl: imageUrl
        categoryName: categoryName
        categoryId: 0
      properties:
        categoryId:
          format: int32
          type: integer
        categoryName:
          type: string
        imageUrl:
          type: string
      required:
      - categoryName
      - imageUrl
      type: object
    GoalLogin:
      additionalProperties: false
      example:
        password: password
        userName: userName
      properties:
        userName:
          type: string
        password:
          type: string
      required:
      - password
      - userName
      type: object
    GoalMileStone:
      additionalProperties: false
      example:
        milestoneDetails: milestoneDetails
        goalId: 5
        expectedEndDate: 2000-01-23T04:56:07.000+00:00
        milestoneId: 5
        milestoneTitle: milestoneTitle
        isCompleted: true
      properties:
        milestoneId:
          format: int32
          type: integer
        goalId:
          format: int32
          type: integer
        milestoneTitle:
          type: string
        milestoneDetails:
          type: string
        expectedEndDate:
          format: date-time
          type: string
        isCompleted:
          nullable: true
          type: boolean
      required:
      - expectedEndDate
      - goalId
      - milestoneDetails
      - milestoneTitle
      type: object
    GoalProgressNote:
      additionalProperties: false
      example:
        goalId: 5
        progressDetails: progressDetails
        progressNoteId: 5
      properties:
        progressNoteId:
          format: int32
          type: integer
        goalId:
          format: int32
          type: integer
        progressDetails:
          type: string
      required:
      - goalId
      - progressDetails
      type: object
    GoalUser:
      additionalProperties: false
      example:
        password: password
        address: address
        role: role
        city: city
        name: name
        userName: userName
        userId: 0
        email: email
        contactNo: contactNo
      properties:
        userId:
          format: int32
          type: integer
        name:
          type: string
        email:
          type: string
        userName:
          type: string
        password:
          type: string
        contactNo:
          type: string
        city:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        role:
          type: string
      required:
      - contactNo
      - email
      - name
      - password
      - role
      - userName
      type: object
    hospitalAppointmentView:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        mobileNo:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        age:
          format: int32
          type: integer
        gender:
          nullable: true
          type: string
        appointmentDate:
          format: date-time
          type: string
        appointmentTime:
          nullable: true
          type: string
        isFirstVisit:
          type: boolean
        naration:
          nullable: true
          type: string
      type: object
    hospitalPatient:
      additionalProperties: false
      properties:
        patientId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        mobileNo:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        age:
          format: int32
          type: integer
        gender:
          nullable: true
          type: string
      type: object
    hotelBookingDetail:
      additionalProperties: false
      example:
        bookingDetailId: 2
        aadharCardNo: aadharCardNo
        bookingId: 7
        customerName: customerName
      properties:
        bookingDetailId:
          format: int32
          type: integer
        bookingId:
          format: int32
          type: integer
        customerName:
          nullable: true
          type: string
        aadharCardNo:
          nullable: true
          type: string
      type: object
    hotelCustomer:
      additionalProperties: false
      properties:
        custId:
          format: int32
          type: integer
        name:
          nullable: true
          type: string
        mobileNo:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        aadharNo:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
      type: object
    hotelRoomMaster:
      additionalProperties: false
      properties:
        roomId:
          format: int32
          type: integer
        roomName:
          nullable: true
          type: string
        isAcAvailable:
          type: boolean
        roomCapacity:
          format: int32
          type: integer
        isActive:
          type: boolean
        roomTariff:
          format: double
          type: number
        extensionNo:
          nullable: true
          type: string
      type: object
    hotelUser:
      additionalProperties: false
      properties:
        userId:
          format: int32
          type: integer
        userName:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
      type: object
    InLanguage:
      additionalProperties: false
      example:
        Language: Language
        LanguageId: 0
      properties:
        LanguageId:
          format: int32
          type: integer
        Language:
          nullable: true
          type: string
      type: object
    InLanguageTopic:
      additionalProperties: false
      example:
        OrderNo: 1
        LanguageId: 6
        LanguageTopicId: 0
        TopicName: TopicName
      properties:
        LanguageTopicId:
          format: int32
          type: integer
        LanguageId:
          format: int32
          type: integer
        TopicName:
          nullable: true
          type: string
        OrderNo:
          format: int32
          type: integer
      type: object
    InQuestion:
      additionalProperties: false
      example:
        Answer: Answer
        QuestionId: 0
        IsPhotos: true
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        IsDelete: true
        Question: Question
        OrderNo: 1
        LanguageTopicId: 6
      properties:
        QuestionId:
          format: int32
          type: integer
        LanguageTopicId:
          format: int32
          type: integer
        Question:
          nullable: true
          type: string
        Answer:
          nullable: true
          type: string
        IsPhotos:
          nullable: true
          type: boolean
        CreatedDate:
          format: date-time
          nullable: true
          type: string
        IsDelete:
          nullable: true
          type: boolean
        OrderNo:
          format: int32
          type: integer
      type: object
    JiraIssue:
      additionalProperties: false
      example:
        summary: summary
        createdDate: 2000-01-23T04:56:07.000+00:00
        ticketGuid: ticketGuid
        storyPoint: 1
        createdBy: 5
        description: description
        projectId: 2
        ticketId: 0
        parentId: 6
        assignedTo: 5
        status: status
      properties:
        ticketId:
          format: int32
          type: integer
        createdDate:
          format: date-time
          nullable: true
          type: string
        summary:
          type: string
        status:
          type: string
        description:
          type: string
        parentId:
          format: int32
          nullable: true
          type: integer
        storyPoint:
          format: int32
          type: integer
        ticketGuid:
          nullable: true
          type: string
        assignedTo:
          format: int32
          type: integer
        createdBy:
          format: int32
          type: integer
        projectId:
          format: int32
          type: integer
      required:
      - description
      - projectId
      - status
      - summary
      type: object
    JiraProject:
      additionalProperties: false
      example:
        createdDate: 2000-01-23T04:56:07.000+00:00
        projectName: projectName
        shortName: shortName
        projectId: 0
      properties:
        projectId:
          format: int32
          type: integer
        projectName:
          nullable: true
          type: string
        shortName:
          nullable: true
          type: string
        createdDate:
          format: date-time
          type: string
      type: object
    JiraUser:
      additionalProperties: false
      example:
        password: password
        fullName: fullName
        emailId: emailId
        userId: 0
      properties:
        userId:
          format: int32
          type: integer
        emailId:
          type: string
        fullName:
          type: string
        password:
          type: string
      required:
      - emailId
      - fullName
      - password
      type: object
    JobApplication:
      additionalProperties: false
      example:
        AppliedDate: 2000-01-23T04:56:07.000+00:00
        ApplcationStatus: ApplcationStatus
        JobSeekerId: 1
        ApplicationId: 0
        JobId: 6
      properties:
        ApplicationId:
          format: int32
          type: integer
        JobId:
          format: int32
          type: integer
        JobSeekerId:
          format: int32
          type: integer
        AppliedDate:
          format: date-time
          type: string
        ApplcationStatus:
          nullable: true
          type: string
      type: object
    JobCategory:
      additionalProperties: false
      example:
        CategoryName: CategoryName
        JobCategoryId: 0
      properties:
        JobCategoryId:
          format: int32
          type: integer
        CategoryName:
          nullable: true
          type: string
      type: object
    JobEmployer:
      additionalProperties: false
      example:
        EmployerId: 0
        MobileNo: MobileNo
        CompanyAddress: CompanyAddress
        CompanyName: CompanyName
        EmailId: EmailId
        PhoneNo: PhoneNo
        State: State
        LogoURL: LogoURL
        GstNo: GstNo
        City: City
        PinCode: PinCode
      properties:
        EmployerId:
          format: int32
          type: integer
        CompanyName:
          nullable: true
          type: string
        EmailId:
          nullable: true
          type: string
        MobileNo:
          nullable: true
          type: string
        PhoneNo:
          nullable: true
          type: string
        CompanyAddress:
          nullable: true
          type: string
        City:
          nullable: true
          type: string
        State:
          nullable: true
          type: string
        PinCode:
          nullable: true
          type: string
        LogoURL:
          nullable: true
          type: string
        GstNo:
          nullable: true
          type: string
      type: object
    JobListing:
      additionalProperties: false
      example:
        EmployerId: 6
        CategoryId: 1
        Experience: Experience
        JobDescription: JobDescription
        IsActive: true
        JobName: JobName
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        Package: Package
        JobId: 0
        Location: Location
      properties:
        JobId:
          format: int32
          type: integer
        JobName:
          nullable: true
          type: string
        CreatedDate:
          format: date-time
          type: string
        EmployerId:
          format: int32
          type: integer
        CategoryId:
          format: int32
          type: integer
        Experience:
          nullable: true
          type: string
        Package:
          nullable: true
          type: string
        Location:
          nullable: true
          type: string
        JobDescription:
          nullable: true
          type: string
        IsActive:
          type: boolean
      type: object
    JobSeekerSkill:
      additionalProperties: false
      example:
        SkillName: SkillName
        JobSeekarId: 1
        SkillId: 6
        DurationOfSkill: DurationOfSkill
      properties:
        SkillId:
          format: int32
          type: integer
        JobSeekarId:
          format: int32
          type: integer
        SkillName:
          nullable: true
          type: string
        DurationOfSkill:
          nullable: true
          type: string
      type: object
    JobSeekerViewModel:
      additionalProperties: false
      example:
        MobileNo: MobileNo
        EmailId: EmailId
        JobSeekerWorkExperiences:
        - StartDate: 2000-01-23T04:56:07.000+00:00
          CompanyName: CompanyName
          WorkExpId: 5
          JobDescription: JobDescription
          JobSeekerId: 5
          IsCurrentCompany: true
          EndDate: 2000-01-23T04:56:07.000+00:00
          Profile: Profile
        - StartDate: 2000-01-23T04:56:07.000+00:00
          CompanyName: CompanyName
          WorkExpId: 5
          JobDescription: JobDescription
          JobSeekerId: 5
          IsCurrentCompany: true
          EndDate: 2000-01-23T04:56:07.000+00:00
          Profile: Profile
        JobSeekerId: 0
        FullName: FullName
        ExperienceStatus: ExperienceStatus
        ResumeUrl: ResumeUrl
        JobSeekerSkills:
        - SkillName: SkillName
          JobSeekarId: 1
          SkillId: 6
          DurationOfSkill: DurationOfSkill
        - SkillName: SkillName
          JobSeekarId: 1
          SkillId: 6
          DurationOfSkill: DurationOfSkill
      properties:
        JobSeekerId:
          format: int32
          type: integer
        FullName:
          nullable: true
          type: string
        EmailId:
          nullable: true
          type: string
        MobileNo:
          nullable: true
          type: string
        ExperienceStatus:
          nullable: true
          type: string
        ResumeUrl:
          nullable: true
          type: string
        JobSeekerSkills:
          items:
            $ref: '#/components/schemas/JobSeekerSkill'
          nullable: true
          type: array
        JobSeekerWorkExperiences:
          items:
            $ref: '#/components/schemas/JobSeekerWorkExperience'
          nullable: true
          type: array
      type: object
    JobSeekerWorkExperience:
      additionalProperties: false
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        CompanyName: CompanyName
        WorkExpId: 5
        JobDescription: JobDescription
        JobSeekerId: 5
        IsCurrentCompany: true
        EndDate: 2000-01-23T04:56:07.000+00:00
        Profile: Profile
      properties:
        WorkExpId:
          format: int32
          type: integer
        JobSeekerId:
          format: int32
          type: integer
        CompanyName:
          nullable: true
          type: string
        IsCurrentCompany:
          type: boolean
        Profile:
          nullable: true
          type: string
        StartDate:
          format: date-time
          type: string
        EndDate:
          format: date-time
          nullable: true
          type: string
        JobDescription:
          nullable: true
          type: string
      type: object
    JobUserView:
      additionalProperties: false
      example:
        UserName: UserName
        Password: Password
      properties:
        UserName:
          type: string
        Password:
          type: string
      required:
      - Password
      - UserName
      type: object
    LoginModel:
      additionalProperties: false
      example:
        password: password
        userName: userName
      properties:
        userName:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
      type: object
    LoginZomato:
      additionalProperties: false
      example:
        password: password
        userName: userName
      properties:
        userName:
          type: string
        password:
          type: string
      required:
      - password
      - userName
      type: object
    NewhotelBooking:
      additionalProperties: false
      example:
        address: address
        city: city
        naration: naration
        hotelBookingDetails:
        - bookingDetailId: 2
          aadharCardNo: aadharCardNo
          bookingId: 7
          customerName: customerName
        - bookingDetailId: 2
          aadharCardNo: aadharCardNo
          bookingId: 7
          customerName: customerName
        mobileNo: mobileNo
        aadharNo: aadharNo
        bookingId: 0
        roomId: 6
        bookingFromDate: 2000-01-23T04:56:07.000+00:00
        bookingToDate: 2000-01-23T04:56:07.000+00:00
        createdDate: 2000-01-23T04:56:07.000+00:00
        createdBy: 5
        name: name
        customerId: 1
        bookingRate: 5.962133916683182
        email: email
      properties:
        name:
          nullable: true
          type: string
        mobileNo:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        aadharNo:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        bookingId:
          format: int32
          type: integer
        roomId:
          format: int32
          type: integer
        customerId:
          format: int32
          type: integer
        bookingFromDate:
          format: date-time
          type: string
        bookingToDate:
          format: date-time
          type: string
        createdDate:
          format: date-time
          type: string
        bookingRate:
          format: double
          type: number
        naration:
          nullable: true
          type: string
        createdBy:
          format: int32
          type: integer
        hotelBookingDetails:
          items:
            $ref: '#/components/schemas/hotelBookingDetail'
          nullable: true
          type: array
      type: object
    NewTicket:
      additionalProperties: false
      example:
        severity: severity
        requestDetails: requestDetails
        deptId: 6
        employeeId: 0
        state: state
      properties:
        employeeId:
          format: int32
          type: integer
        severity:
          nullable: true
          type: string
        deptId:
          format: int32
          type: integer
        state:
          nullable: true
          type: string
        requestDetails:
          nullable: true
          type: string
      required:
      - deptId
      - employeeId
      type: object
    Offer:
      additionalProperties: false
      example:
        OfferId: 0
        OfferName: OfferName
        IsDeleted: true
        IsActive: true
        Amount: 6.027456183070403
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        OfferDetails: OfferDetails
      properties:
        OfferId:
          format: int32
          type: integer
        OfferName:
          nullable: true
          type: string
        OfferDetails:
          nullable: true
          type: string
        CreatedDate:
          format: date-time
          type: string
        IsDeleted:
          type: boolean
        IsActive:
          type: boolean
        Amount:
          format: double
          type: number
      type: object
    OfferView:
      additionalProperties: false
      example:
        OfferId: 0
        OfferName: OfferName
        IsDeleted: true
        Message: Message
        IsActive: true
        Amount: 6.027456183070403
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        OfferDetails: OfferDetails
        Result: true
      properties:
        OfferId:
          format: int32
          type: integer
        OfferName:
          nullable: true
          type: string
        OfferDetails:
          nullable: true
          type: string
        CreatedDate:
          format: date-time
          type: string
        IsDeleted:
          type: boolean
        IsActive:
          type: boolean
        Amount:
          format: double
          type: number
        Message:
          nullable: true
          type: string
        Result:
          type: boolean
      type: object
    quizAssignedtest:
      additionalProperties: false
      properties:
        assignedTestId:
          format: int32
          type: integer
        userId:
          format: int32
          type: integer
        testId:
          format: int32
          type: integer
        assignedDate:
          format: date-time
          type: string
        isStarted:
          nullable: true
          type: boolean
        startedDate:
          format: date-time
          nullable: true
          type: string
        isCompleted:
          nullable: true
          type: boolean
        completedeDate:
          format: date-time
          nullable: true
          type: string
        totalCorrectAnswers:
          format: int32
          nullable: true
          type: integer
      type: object
    quizAssignedtestViewModel:
      additionalProperties: false
      properties:
        assignedTestId:
          format: int32
          type: integer
        userId:
          format: int32
          type: integer
        testId:
          format: int32
          type: integer
        quizTestAnswerViews:
          items:
            $ref: '#/components/schemas/quizTestAnswerView'
          nullable: true
          type: array
      type: object
    quizCategory:
      additionalProperties: false
      properties:
        categoryId:
          format: int32
          type: integer
        categoryName:
          nullable: true
          type: string
        parentCategoryId:
          format: int32
          type: integer
        imageUrl:
          nullable: true
          type: string
      type: object
    quizQuestionAnswer:
      additionalProperties: false
      properties:
        optionId:
          format: int32
          type: integer
        questionId:
          format: int32
          type: integer
        optionText:
          nullable: true
          type: string
        isCodeSnipet:
          type: boolean
        isCorrect:
          type: boolean
      type: object
    quizQuestionsViewModel:
      additionalProperties: false
      properties:
        questionId:
          format: int32
          type: integer
        categoryId:
          format: int32
          type: integer
        questionName:
          nullable: true
          type: string
        isMultpleAnswer:
          type: boolean
        isCodeSnipet:
          type: boolean
        codeSnipetText:
          nullable: true
          type: string
        quizQuestionAnswers:
          items:
            $ref: '#/components/schemas/quizQuestionAnswer'
          nullable: true
          type: array
      type: object
    quizTestAnswerView:
      additionalProperties: false
      properties:
        questionId:
          format: int32
          type: integer
        selectedOptionId:
          format: int32
          type: integer
      type: object
    quizTestQuestion:
      additionalProperties: false
      properties:
        testQuestionId:
          format: int32
          type: integer
        questionId:
          format: int32
          type: integer
        testId:
          format: int32
          type: integer
      type: object
    quizTestViewModel:
      additionalProperties: false
      properties:
        testId:
          format: int32
          type: integer
        testName:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        duration:
          nullable: true
          type: string
        quizTestQuestions:
          items:
            $ref: '#/components/schemas/quizTestQuestion'
          nullable: true
          type: array
      type: object
    quizUser:
      additionalProperties: false
      properties:
        userId:
          format: int32
          type: integer
        emailid:
          nullable: true
          type: string
        mobileNo:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        fullName:
          nullable: true
          type: string
        gender:
          nullable: true
          type: string
        registrationCode:
          nullable: true
          type: string
        collegeName:
          nullable: true
          type: string
        stream:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
      type: object
    QuotationBid:
      additionalProperties: false
      example:
        quotedRate: 5.962133916683182
        quotationId: 6
        naration: naration
        isAwarded: true
        vendorId: 5
        userId: 1
        bidId: 0
      properties:
        bidId:
          format: int32
          type: integer
        quotationId:
          format: int32
          type: integer
        userId:
          format: int32
          type: integer
        quotedRate:
          format: double
          type: number
        naration:
          nullable: true
          type: string
        isAwarded:
          nullable: true
          type: boolean
        vendorId:
          format: int32
          type: integer
      type: object
    QuotationBidFilter:
      additionalProperties: false
      example:
        quotedRate: 1.4658129805029452
        farmerId: 0
        naration: naration
        foodItemName: foodItemName
        isAwarded: true
        vendorId: 5
        rfqName: rfqName
        categoryId: 6
      properties:
        farmerId:
          format: int32
          nullable: true
          type: integer
        rfqName:
          nullable: true
          type: string
        foodItemName:
          nullable: true
          type: string
        categoryId:
          format: int32
          nullable: true
          type: integer
        quotedRate:
          format: double
          type: number
        naration:
          nullable: true
          type: string
        isAwarded:
          nullable: true
          type: boolean
        vendorId:
          format: int32
          type: integer
      type: object
    QuotationFilter:
      additionalProperties: false
      example:
        farmerId: 0
        districtId: 5
        talukaId: 1
        foodItemName: foodItemName
        rfqName: rfqName
        cityId: 5
        categoryId: 6
      properties:
        farmerId:
          format: int32
          nullable: true
          type: integer
        rfqName:
          nullable: true
          type: string
        foodItemName:
          nullable: true
          type: string
        categoryId:
          format: int32
          nullable: true
          type: integer
        talukaId:
          format: int32
          nullable: true
          type: integer
        cityId:
          format: int32
          nullable: true
          type: integer
        districtId:
          format: int32
          nullable: true
          type: integer
      type: object
    QuotationMaster:
      additionalProperties: false
      example:
        biddingStartDate: 2000-01-23T04:56:07.000+00:00
        quantity: quantity
        awardedDate: 2000-01-23T04:56:07.000+00:00
        farmVisitStartDate: 2000-01-23T04:56:07.000+00:00
        quotationId: 0
        quotationReleaseDate: 2000-01-23T04:56:07.000+00:00
        foodMaterialReadyDate: 2000-01-23T04:56:07.000+00:00
        foodItemId: 1
        biddingEndDate: 2000-01-23T04:56:07.000+00:00
        proposedRate: 5.962133916683182
        photosUrls: photosUrls
        farmerId: 6
        farmVisitEndDate: 2000-01-23T04:56:07.000+00:00
        awardedRate: 2.3021358869347655
        isTransportationProvided: true
        quotationAwardedTo: 5
        rfqName: rfqName
        extraDetails: extraDetails
      properties:
        quotationId:
          format: int32
          type: integer
        farmerId:
          format: int32
          type: integer
        foodItemId:
          format: int32
          type: integer
        quantity:
          nullable: true
          type: string
        quotationReleaseDate:
          format: date-time
          nullable: true
          type: string
        proposedRate:
          format: double
          type: number
        biddingStartDate:
          format: date-time
          type: string
        biddingEndDate:
          format: date-time
          nullable: true
          type: string
        farmVisitStartDate:
          format: date-time
          nullable: true
          type: string
        farmVisitEndDate:
          format: date-time
          nullable: true
          type: string
        foodMaterialReadyDate:
          format: date-time
          nullable: true
          type: string
        isTransportationProvided:
          nullable: true
          type: boolean
        extraDetails:
          nullable: true
          type: string
        photosUrls:
          nullable: true
          type: string
        quotationAwardedTo:
          format: int32
          nullable: true
          type: integer
        awardedRate:
          format: double
          nullable: true
          type: number
        awardedDate:
          format: date-time
          nullable: true
          type: string
        rfqName:
          nullable: true
          type: string
      type: object
    QuotationMasterView:
      additionalProperties: false
      example:
        biddingStartDate: 2000-01-23T04:56:07.000+00:00
        quantity: quantity
        farmVisitStartDate: 2000-01-23T04:56:07.000+00:00
        quotationId: 0
        quotationReleaseDate: 2000-01-23T04:56:07.000+00:00
        foodMaterialReadyDate: 2000-01-23T04:56:07.000+00:00
        foodItemId: 1
        biddingEndDate: 2000-01-23T04:56:07.000+00:00
        proposedRate: 5.962133916683182
        photosUrls: photosUrls
        farmerId: 6
        farmVisitEndDate: 2000-01-23T04:56:07.000+00:00
        isTransportationProvided: true
        rfqName: rfqName
        extraDetails: extraDetails
      properties:
        quotationId:
          format: int32
          type: integer
        farmerId:
          format: int32
          type: integer
        rfqName:
          nullable: true
          type: string
        foodItemId:
          format: int32
          type: integer
        quantity:
          nullable: true
          type: string
        quotationReleaseDate:
          format: date-time
          nullable: true
          type: string
        proposedRate:
          format: double
          type: number
        biddingStartDate:
          format: date-time
          type: string
        biddingEndDate:
          format: date-time
          nullable: true
          type: string
        farmVisitStartDate:
          format: date-time
          nullable: true
          type: string
        farmVisitEndDate:
          format: date-time
          nullable: true
          type: string
        foodMaterialReadyDate:
          format: date-time
          nullable: true
          type: string
        isTransportationProvided:
          nullable: true
          type: boolean
        extraDetails:
          nullable: true
          type: string
        photosUrls:
          nullable: true
          type: string
      type: object
    ReLogin:
      additionalProperties: false
      example:
        password: password
        emailId: emailId
      properties:
        emailId:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
      type: object
    ReqDepartment:
      additionalProperties: false
      example:
        deptName: deptName
        createdDate: 2000-01-23T04:56:07.000+00:00
        deptId: 0
        deptHeadEmpId: 6
      properties:
        deptId:
          format: int32
          type: integer
        deptName:
          type: string
        deptHeadEmpId:
          format: int32
          type: integer
        createdDate:
          format: date-time
          nullable: true
          type: string
      required:
      - deptName
      type: object
    ReqEmployee:
      additionalProperties: false
      example:
        employeeName: employeeName
        password: password
        role: role
        gender: gender
        deptId: 6
        employeeId: 0
        emailId: emailId
        contactNo: contactNo
      properties:
        employeeId:
          format: int32
          type: integer
        employeeName:
          type: string
        contactNo:
          type: string
        emailId:
          type: string
        deptId:
          format: int32
          type: integer
        password:
          type: string
        gender:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
      required:
      - contactNo
      - deptId
      - emailId
      - employeeName
      - password
      type: object
    ReqLeaf:
      additionalProperties: false
      example:
        fromDate: 2000-01-23T04:56:07.000+00:00
        approvedDate: 2000-01-23T04:56:07.000+00:00
        leaveType: leaveType
        toDate: 2000-01-23T04:56:07.000+00:00
        leaveId: 0
        employeeId: 6
        details: details
        isApproved: true
        noOfDays: 1
      properties:
        leaveId:
          format: int32
          type: integer
        employeeId:
          format: int32
          type: integer
        fromDate:
          format: date-time
          type: string
        toDate:
          format: date-time
          type: string
        noOfDays:
          format: int32
          type: integer
        leaveType:
          type: string
        details:
          nullable: true
          type: string
        isApproved:
          nullable: true
          type: boolean
        approvedDate:
          format: date-time
          nullable: true
          type: string
      required:
      - employeeId
      - fromDate
      - leaveType
      - noOfDays
      - toDate
      type: object
    RequestFilter:
      additionalProperties: false
      example:
        ticketNo: ticketNo
        employeeId: 0
        assignedTo: 6
      properties:
        ticketNo:
          nullable: true
          type: string
        employeeId:
          format: int32
          type: integer
        assignedTo:
          format: int32
          type: integer
      type: object
    RoomAllotmentList:
      additionalProperties: false
      example:
        BookingDate: 2000-01-23T04:56:07.000+00:00
        RoomNo: RoomNo
        BookingDetails: BookingDetails
        AllotId: 6
        BookingId: 0
        MonthDay: 5
        RoomId: 1
        CustomerId: 5
        CustomerName: CustomerName
        IsConfirmed: true
      properties:
        BookingId:
          format: int32
          type: integer
        AllotId:
          format: int32
          type: integer
        RoomId:
          format: int32
          type: integer
        IsConfirmed:
          type: boolean
        RoomNo:
          nullable: true
          type: string
        CustomerId:
          format: int32
          type: integer
        CustomerName:
          nullable: true
          type: string
        BookingDetails:
          nullable: true
          type: string
        BookingDate:
          format: date-time
          nullable: true
          type: string
        MonthDay:
          format: int32
          type: integer
      type: object
    RoomListViewModel:
      additionalProperties: false
      example:
        RoomStatusName: RoomStatusName
        RoomNo: RoomNo
        RoomTypeName: RoomTypeName
        RoomExtensionNo: RoomExtensionNo
        RoomStatus: 5
        RoomId: 0
        TotalBed: 6
        RoomCapacity: 1
      properties:
        RoomId:
          format: int32
          type: integer
        RoomTypeName:
          nullable: true
          type: string
        RoomNo:
          nullable: true
          type: string
        TotalBed:
          format: int32
          type: integer
        RoomCapacity:
          format: int32
          type: integer
        RoomExtensionNo:
          nullable: true
          type: string
        RoomStatus:
          format: int32
          type: integer
        RoomStatusName:
          nullable: true
          type: string
      type: object
    RoomTypeMaster:
      additionalProperties: false
      example:
        RoomTypeId: 0
        RoomTypeName: RoomTypeName
        RoomMaxCapacity: 6
      properties:
        RoomTypeId:
          format: int32
          type: integer
        RoomTypeName:
          type: string
        RoomMaxCapacity:
          format: int32
          type: integer
      required:
      - RoomMaxCapacity
      - RoomTypeName
      type: object
    RoomTypeViewModel:
      additionalProperties: false
      example:
        RoomTypeId: 0
        RoomTypeName: RoomTypeName
        Message: Message
        RoomMaxCapacity: 6
        Result: true
      properties:
        RoomTypeId:
          format: int32
          type: integer
        RoomTypeName:
          nullable: true
          type: string
        RoomMaxCapacity:
          format: int32
          type: integer
        Message:
          nullable: true
          type: string
        Result:
          type: boolean
      type: object
    RoomViewModel:
      additionalProperties: false
      example:
        RoomTypeId: 6
        RoomNo: RoomNo
        RoomExtensionNo: RoomExtensionNo
        RoomStatus: 5
        Message: Message
        RoomId: 0
        TotalBed: 1
        RoomCapacity: 5
        Result: true
      properties:
        RoomId:
          format: int32
          type: integer
        RoomTypeId:
          format: int32
          type: integer
        RoomNo:
          nullable: true
          type: string
        TotalBed:
          format: int32
          type: integer
        RoomCapacity:
          format: int32
          type: integer
        RoomExtensionNo:
          nullable: true
          type: string
        RoomStatus:
          format: int32
          type: integer
        Message:
          nullable: true
          type: string
        Result:
          type: boolean
      type: object
    Service:
      additionalProperties: false
      example:
        Sgst: 5.962133916683182
        IsDeleted: true
        ServiceName: ServiceName
        Cgst: 1.4658129805029452
        TaxableAmount: 6.027456183070403
        IsActive: true
        ServiceId: 0
      properties:
        ServiceId:
          format: int32
          type: integer
        ServiceName:
          nullable: true
          type: string
        TaxableAmount:
          format: double
          type: number
        Cgst:
          format: double
          type: number
        Sgst:
          format: double
          type: number
        IsActive:
          type: boolean
        IsDeleted:
          type: boolean
      type: object
    ServicesView:
      additionalProperties: false
      example:
        Sgst: 5.962133916683182
        IsDeleted: true
        Message: Message
        ServiceName: ServiceName
        Cgst: 1.4658129805029452
        TaxableAmount: 6.027456183070403
        IsActive: true
        ServiceId: 0
        Result: true
      properties:
        ServiceId:
          format: int32
          type: integer
        ServiceName:
          nullable: true
          type: string
        TaxableAmount:
          format: double
          type: number
        Cgst:
          format: double
          type: number
        Sgst:
          format: double
          type: number
        IsActive:
          type: boolean
        IsDeleted:
          type: boolean
        Message:
          nullable: true
          type: string
        Result:
          type: boolean
      type: object
    StateMaster:
      additionalProperties: false
      example:
        stateName: stateName
        stateId: 0
      properties:
        stateId:
          format: int32
          type: integer
        stateName:
          nullable: true
          type: string
      type: object
    StateMasterDATA:
      additionalProperties: false
      example:
        stateName: stateName
        stateId: 0
        countryId: 6
      properties:
        stateId:
          format: int32
          type: integer
        stateName:
          type: string
        countryId:
          format: int32
          type: integer
      required:
      - stateName
      type: object
    StatusMasterView:
      additionalProperties: false
      example:
        Status: Status
        Message: Message
        StatusId: 0
        StatusFor: StatusFor
        Result: true
      properties:
        StatusId:
          format: int32
          type: integer
        StatusFor:
          type: string
        Status:
          type: string
        Message:
          nullable: true
          type: string
        Result:
          type: boolean
      required:
      - Status
      - StatusFor
      type: object
    StatusMasterViewModel:
      additionalProperties: false
      example:
        Status: Status
        StatusId: 0
        StatusFor: StatusFor
      properties:
        StatusId:
          format: int32
          type: integer
        Status:
          nullable: true
          type: string
        StatusFor:
          nullable: true
          type: string
      type: object
    StockProduct:
      additionalProperties: false
      example:
        createdDate: 2000-01-23T04:56:07.000+00:00
        productId: 0
        price: 6.027456183070403
        productDetails: productDetails
        categoryName: categoryName
        productName: productName
      properties:
        productId:
          format: int32
          type: integer
        productName:
          nullable: true
          type: string
        categoryName:
          nullable: true
          type: string
        createdDate:
          format: date-time
          type: string
        price:
          format: double
          type: number
        productDetails:
          nullable: true
          type: string
      type: object
    StockPurchase:
      additionalProperties: false
      example:
        supplierName: supplierName
        purchaseDate: 2000-01-23T04:56:07.000+00:00
        quantity: 1
        productId: 6
        purchaseId: 0
        invoiceAmount: 5.962133916683182
        invoiceNo: invoiceNo
      properties:
        purchaseId:
          format: int32
          type: integer
        purchaseDate:
          format: date-time
          type: string
        productId:
          format: int32
          type: integer
        quantity:
          format: int32
          type: integer
        supplierName:
          nullable: true
          type: string
        invoiceAmount:
          format: double
          type: number
        invoiceNo:
          nullable: true
          type: string
      type: object
    StockSale:
      additionalProperties: false
      example:
        totalAmount: 5.962133916683182
        quantity: 1
        saleId: 0
        productId: 6
        mobileNo: mobileNo
        saleDate: 2000-01-23T04:56:07.000+00:00
        invoiceNo: invoiceNo
        customerName: customerName
      properties:
        saleId:
          format: int32
          type: integer
        invoiceNo:
          nullable: true
          type: string
        customerName:
          nullable: true
          type: string
        mobileNo:
          nullable: true
          type: string
        saleDate:
          format: date-time
          type: string
        productId:
          format: int32
          type: integer
        quantity:
          format: int32
          type: integer
        totalAmount:
          format: double
          type: number
      type: object
    TalukaMaster:
      additionalProperties: false
      example:
        talukaId: 0
        talukaName: talukaName
        cityId: 6
      properties:
        talukaId:
          format: int32
          type: integer
        talukaName:
          nullable: true
          type: string
        cityId:
          format: int32
          type: integer
      type: object
    TempBooking:
      additionalProperties: false
      example:
        MobileNo: MobileNo
        NoOfMembers: 6
        State: State
        BookingId: 0
        AltMobNo: AltMobNo
        City: City
        IsConfirmed: true
        Name: Name
        DateOfStay: 2000-01-23T04:56:07.000+00:00
      properties:
        BookingId:
          format: int32
          type: integer
        Name:
          nullable: true
          type: string
        City:
          nullable: true
          type: string
        MobileNo:
          nullable: true
          type: string
        State:
          nullable: true
          type: string
        AltMobNo:
          nullable: true
          type: string
        DateOfStay:
          format: date-time
          type: string
        NoOfMembers:
          format: int32
          type: integer
        IsConfirmed:
          type: boolean
      type: object
    TestLogin:
      additionalProperties: false
      example:
        password: password
        emailid: emailid
      properties:
        emailid:
          type: string
        password:
          type: string
      required:
      - emailid
      - password
      type: object
    TrainAppBookingPassenger:
      additionalProperties: false
      example:
        passengerName: passengerName
        bookingPassengerId: 5
        seatNo: 7
        bookingId: 2
        age: 9
      properties:
        bookingPassengerId:
          format: int32
          type: integer
        bookingId:
          format: int32
          type: integer
        passengerName:
          nullable: true
          type: string
        seatNo:
          format: int32
          type: integer
        age:
          format: int32
          type: integer
      type: object
    TrainAppBookingView:
      additionalProperties: false
      example:
        trainId: 6
        travelDate: 2000-01-23T04:56:07.000+00:00
        passengerId: 1
        bookingDate: 2000-01-23T04:56:07.000+00:00
        TrainAppBookingPassengers:
        - passengerName: passengerName
          bookingPassengerId: 5
          seatNo: 7
          bookingId: 2
          age: 9
        - passengerName: passengerName
          bookingPassengerId: 5
          seatNo: 7
          bookingId: 2
          age: 9
        bookingId: 0
        totalSeats: 5
      properties:
        bookingId:
          format: int32
          type: integer
        trainId:
          format: int32
          type: integer
        passengerId:
          format: int32
          type: integer
        travelDate:
          format: date-time
          type: string
        bookingDate:
          format: date-time
          type: string
        totalSeats:
          format: int32
          type: integer
        TrainAppBookingPassengers:
          items:
            $ref: '#/components/schemas/TrainAppBookingPassenger'
          nullable: true
          type: array
      type: object
    TrainAppPassenger:
      additionalProperties: false
      example:
        firstName: firstName
        lastName: lastName
        password: password
        phone: phone
        passengerID: 0
        email: email
      properties:
        passengerID:
          format: int32
          type: integer
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
      type: object
    TrainAppStation:
      additionalProperties: false
      example:
        stationCode: stationCode
        stationName: stationName
        stationID: 0
      properties:
        stationID:
          format: int32
          type: integer
        stationName:
          nullable: true
          type: string
        stationCode:
          nullable: true
          type: string
      type: object
    TrainAppTrain:
      additionalProperties: false
      example:
        trainId: 0
        departureTime: departureTime
        arrivalStationId: 5
        arrivalTime: arrivalTime
        trainName: trainName
        departureStationId: 1
        trainNo: 6
        departureDate: 2000-01-23T04:56:07.000+00:00
        totalSeats: 5
      properties:
        trainId:
          format: int32
          type: integer
        trainNo:
          format: int32
          type: integer
        trainName:
          nullable: true
          type: string
        departureStationId:
          format: int32
          type: integer
        arrivalStationId:
          format: int32
          type: integer
        departureTime:
          nullable: true
          type: string
        arrivalTime:
          nullable: true
          type: string
        totalSeats:
          format: int32
          nullable: true
          type: integer
        departureDate:
          format: date-time
          type: string
      type: object
    TrainLogin:
      additionalProperties: false
      example:
        password: password
        phone: phone
      properties:
        phone:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
      type: object
    userAddress:
      additionalProperties: false
      properties:
        city:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        pincode:
          minLength: 6
          nullable: true
          type: string
        addressLine:
          nullable: true
          type: string
      type: object
    UserLogin:
      additionalProperties: false
      example:
        UserName: UserName
        UserPassword: UserPassword
      properties:
        UserName:
          nullable: true
          type: string
        UserPassword:
          nullable: true
          type: string
      type: object
    UserMaster:
      additionalProperties: false
      example:
        Role: Role
        IsDeleted: true
        UserName: UserName
        UserId: 0
        Password: Password
      properties:
        UserId:
          format: int32
          type: integer
        UserName:
          nullable: true
          type: string
        Password:
          nullable: true
          type: string
        Role:
          nullable: true
          type: string
        IsDeleted:
          type: boolean
      type: object
    UserMasterView:
      additionalProperties: false
      example:
        Role: Role
        UserName: UserName
        Message: Message
        UserId: 0
        Password: Password
        Result: true
      properties:
        UserId:
          format: int32
          type: integer
        UserName:
          nullable: true
          type: string
        Password:
          nullable: true
          type: string
        Role:
          nullable: true
          type: string
        Message:
          nullable: true
          type: string
        Result:
          type: boolean
      type: object
    UserModel:
      additionalProperties: false
      example:
        EmailId: EmailId
        Password: Password
      properties:
        EmailId:
          nullable: true
          type: string
        Password:
          nullable: true
          type: string
      type: object
    userSocialDetails:
      additionalProperties: false
      properties:
        facebookProfileUrl:
          nullable: true
          type: string
        linkdinProfileUrl:
          nullable: true
          type: string
        instagramHandle:
          nullable: true
          type: string
        twitterHandle:
          nullable: true
          type: string
      type: object
    VendorFilter:
      additionalProperties: false
      example:
        districtId: 1
        shopTalukaId: 0
        gstNo: gstNo
        cityId: 6
        vendorName: vendorName
        contactNo: contactNo
      properties:
        vendorName:
          nullable: true
          type: string
        contactNo:
          nullable: true
          type: string
        gstNo:
          nullable: true
          type: string
        shopTalukaId:
          format: int32
          nullable: true
          type: integer
        cityId:
          format: int32
          nullable: true
          type: integer
        districtId:
          format: int32
          nullable: true
          type: integer
      type: object
    VendorMaster:
      additionalProperties: false
      example:
        homeTalukaId: 1
        isOwnTransporation: true
        isVerified: true
        gstNo: gstNo
        vendorId: 0
        emailId: emailId
        vendorName: vendorName
        isShopAvailable: true
        businessPanNo: businessPanNo
        verifiedBy: 5
        createdDate: 2000-01-23T04:56:07.000+00:00
        personalPanNo: personalPanNo
        shopTalukaId: 6
        shopAddess: shopAddess
        altContactNo: altContactNo
        contactNo: contactNo
        homeAddress: homeAddress
      properties:
        vendorId:
          format: int32
          type: integer
        vendorName:
          nullable: true
          type: string
        contactNo:
          nullable: true
          type: string
        altContactNo:
          nullable: true
          type: string
        emailId:
          nullable: true
          type: string
        gstNo:
          nullable: true
          type: string
        isShopAvailable:
          nullable: true
          type: boolean
        personalPanNo:
          nullable: true
          type: string
        businessPanNo:
          nullable: true
          type: string
        shopAddess:
          nullable: true
          type: string
        homeAddress:
          nullable: true
          type: string
        shopTalukaId:
          format: int32
          nullable: true
          type: integer
        homeTalukaId:
          format: int32
          type: integer
        createdDate:
          format: date-time
          nullable: true
          type: string
        isOwnTransporation:
          nullable: true
          type: boolean
        isVerified:
          type: boolean
        verifiedBy:
          format: int32
          type: integer
      type: object
    VendorVerificationModel:
      additionalProperties: false
      example:
        executiveId: 6
        vendorId: 0
      properties:
        vendorId:
          format: int32
          type: integer
        executiveId:
          format: int32
          type: integer
      type: object
    ViewGoalView:
      additionalProperties: false
      example:
        goalTitle: goalTitle
        goalDescription: goalDescription
        goalId: 0
        goalExpectedEndDate: 2000-01-23T04:56:07.000+00:00
        GoalMileStones:
        - milestoneDetails: milestoneDetails
          goalId: 5
          expectedEndDate: 2000-01-23T04:56:07.000+00:00
          milestoneId: 5
          milestoneTitle: milestoneTitle
          isCompleted: true
        - milestoneDetails: milestoneDetails
          goalId: 5
          expectedEndDate: 2000-01-23T04:56:07.000+00:00
          milestoneId: 5
          milestoneTitle: milestoneTitle
          isCompleted: true
        goalCategoryId: 1
        GoalProgressNotes:
        - goalId: 5
          progressDetails: progressDetails
          progressNoteId: 5
        - goalId: 5
          progressDetails: progressDetails
          progressNoteId: 5
        userId: 6
        goalStartDate: 2000-01-23T04:56:07.000+00:00
        isCompleted: true
      properties:
        goalId:
          format: int32
          type: integer
        userId:
          format: int32
          type: integer
        goalTitle:
          nullable: true
          type: string
        goalDescription:
          nullable: true
          type: string
        goalStartDate:
          format: date-time
          nullable: true
          type: string
        goalExpectedEndDate:
          format: date-time
          nullable: true
          type: string
        goalCategoryId:
          format: int32
          nullable: true
          type: integer
        isCompleted:
          type: boolean
        GoalMileStones:
          items:
            $ref: '#/components/schemas/GoalMileStone'
          nullable: true
          type: array
        GoalProgressNotes:
          items:
            $ref: '#/components/schemas/GoalProgressNote'
          nullable: true
          type: array
      type: object
    VisitSearch:
      additionalProperties: false
      example:
        FrDate: 2000-01-23T04:56:07.000+00:00
        ContactNo: ContactNo
        BookingUId: BookingUId
        UserId: 0
        TicketNo: TicketNo
        ToDate: 2000-01-23T04:56:07.000+00:00
        IsDone: true
        Name: Name
        ServiceId: 6
      properties:
        Name:
          nullable: true
          type: string
        UserId:
          format: int32
          nullable: true
          type: integer
        ContactNo:
          nullable: true
          type: string
        FrDate:
          format: date-time
          nullable: true
          type: string
        ToDate:
          format: date-time
          nullable: true
          type: string
        ServiceId:
          format: int32
          nullable: true
          type: integer
        BookingUId:
          nullable: true
          type: string
        TicketNo:
          nullable: true
          type: string
        IsDone:
          type: boolean
      type: object
    WaterCustomer:
      additionalProperties: false
      example:
        Discount: 7.457744773683766
        NoOfMembers: 2
        CreateDate: 2000-01-23T04:56:07.000+00:00
        Reason: Reason
        Name: Name
        ServiceId: 9
        BookingToDate: 2000-01-23T04:56:07.000+00:00
        PaymentBy: PaymentBy
        BookingUId: BookingUId
        isConfirm: isConfirm
        TicketNo: TicketNo
        Remaining: 2.027123023002322
        EmailId: EmailId
        Advance: 3.616076749251911
        Reference: 5
        Rate: 1
        Childrens: 7
        RemainingPaidAmt: 1.4658129805029452
        IsAdvance: true
        IsDone: true
        CustomerId: 6
        City: City
        TotalAmount: 7.061401241503109
        VisitId: 0
        TicketDate: 2000-01-23T04:56:07.000+00:00
        Mobile: Mobile
        confirmDate: 2000-01-23T04:56:07.000+00:00
        UserId: 5
        IsDelete: true
        ChildRate: 1
        AdultRate: 1
        PaymentDetails: PaymentDetails
        Adults: 4
        PackageId: 6
      properties:
        VisitId:
          format: int32
          type: integer
        CustomerId:
          format: int32
          type: integer
        Name:
          type: string
        Mobile:
          type: string
        EmailId:
          nullable: true
          type: string
        City:
          nullable: true
          type: string
        TicketNo:
          nullable: true
          type: string
        TicketDate:
          format: date-time
          nullable: true
          type: string
        IsDelete:
          type: boolean
        RemainingPaidAmt:
          format: double
          type: number
        CreateDate:
          format: date-time
          type: string
        Reference:
          format: int32
          nullable: true
          type: integer
        PaymentBy:
          nullable: true
          type: string
        PaymentDetails:
          nullable: true
          type: string
        IsAdvance:
          type: boolean
        UserId:
          format: int32
          nullable: true
          type: integer
        NoOfMembers:
          format: int32
          nullable: true
          type: integer
        TotalAmount:
          format: double
          type: number
        ServiceId:
          format: int32
          nullable: true
          type: integer
        Advance:
          format: double
          type: number
        Remaining:
          format: double
          type: number
        Adults:
          format: int32
          nullable: true
          type: integer
        Childrens:
          format: int32
          nullable: true
          type: integer
        Rate:
          format: int32
          nullable: true
          type: integer
        AdultRate:
          format: int32
          nullable: true
          type: integer
        ChildRate:
          format: int32
          nullable: true
          type: integer
        BookingUId:
          nullable: true
          type: string
        BookingToDate:
          format: date-time
          nullable: true
          type: string
        IsDone:
          type: boolean
        isConfirm:
          nullable: true
          type: string
        confirmDate:
          format: date-time
          nullable: true
          type: string
        Reason:
          nullable: true
          type: string
        PackageId:
          format: int32
          nullable: true
          type: integer
        Discount:
          format: double
          type: number
      required:
      - Mobile
      - Name
      type: object
    WaterCustomerObj:
      additionalProperties: false
      example:
        Discount: 5.962133916683182
        User: User
        Message: Message
        NoOfMembers: 9
        CityOthr: CityOthr
        CreateDate: 2000-01-23T04:56:07.000+00:00
        Reason: Reason
        Name: Name
        ServiceId: 2
        Result: true
        BookingToDate: 2000-01-23T04:56:07.000+00:00
        PaymentBy: PaymentBy
        BookingUId: BookingUId
        isConfirm: isConfirm
        TicketNo: TicketNo
        Remaining: 7.386281948385884
        EmailId: EmailId
        Advance: 4.145608029883936
        Reference: 2
        ReferenceMode: ReferenceMode
        Rate: 1
        Childrens: 1
        RemainingPaidAmt: 5.637376656633329
        IsAdvance: true
        Service: Service
        IsDone: true
        CustomerId: 6
        City: City
        TotalAmount: 3.616076749251911
        VisitId: 0
        TicketDate: 2000-01-23T04:56:07.000+00:00
        Mobile: Mobile
        confirmDate: 2000-01-23T04:56:07.000+00:00
        UserId: 7
        IsDelete: true
        ChildRate: 7
        AdultRate: 6
        PackageId: 1
        PaymentDetails: PaymentDetails
        Adults: 1
      properties:
        VisitId:
          format: int32
          type: integer
        CustomerId:
          format: int32
          type: integer
        PackageId:
          format: int32
          type: integer
        Discount:
          format: double
          type: number
        Name:
          nullable: true
          type: string
        Mobile:
          nullable: true
          type: string
        EmailId:
          nullable: true
          type: string
        City:
          nullable: true
          type: string
        TicketNo:
          nullable: true
          type: string
        TicketDate:
          format: date-time
          nullable: true
          type: string
        IsDelete:
          type: boolean
        CreateDate:
          format: date-time
          type: string
        RemainingPaidAmt:
          format: double
          type: number
        Reference:
          format: int32
          nullable: true
          type: integer
        ReferenceMode:
          nullable: true
          type: string
        PaymentBy:
          nullable: true
          type: string
        PaymentDetails:
          nullable: true
          type: string
        IsAdvance:
          type: boolean
        UserId:
          format: int32
          nullable: true
          type: integer
        User:
          nullable: true
          type: string
        NoOfMembers:
          format: int32
          nullable: true
          type: integer
        TotalAmount:
          format: double
          type: number
        ServiceId:
          format: int32
          nullable: true
          type: integer
        Service:
          nullable: true
          type: string
        Advance:
          format: double
          type: number
        Remaining:
          format: double
          type: number
        Adults:
          format: int32
          nullable: true
          type: integer
        Childrens:
          format: int32
          nullable: true
          type: integer
        Rate:
          format: int32
          nullable: true
          type: integer
        AdultRate:
          format: int32
          nullable: true
          type: integer
        ChildRate:
          format: int32
          nullable: true
          type: integer
        BookingUId:
          nullable: true
          type: string
        BookingToDate:
          format: date-time
          nullable: true
          type: string
        CityOthr:
          nullable: true
          type: string
        IsDone:
          type: boolean
        isConfirm:
          nullable: true
          type: string
        confirmDate:
          format: date-time
          nullable: true
          type: string
        Reason:
          nullable: true
          type: string
        Message:
          nullable: true
          type: string
        Result:
          type: boolean
      type: object
    WaterCustomerView:
      additionalProperties: false
      example:
        NoOfMembers: 1
        Childrens: 2
        Service: Service
        IsDone: true
        CustomerId: 6
        TotalAmount: 5.962133916683182
        VisitId: 0
        TicketDate: 2000-01-23T04:56:07.000+00:00
        Mobile: Mobile
        Name: Name
        confirmDate: 2000-01-23T04:56:07.000+00:00
        BookingUId: BookingUId
        isConfirm: isConfirm
        ChildRate: 9
        TicketNo: TicketNo
        AdultRate: 7
        Adults: 5
        user: user
      properties:
        VisitId:
          format: int32
          type: integer
        CustomerId:
          format: int32
          type: integer
        Name:
          nullable: true
          type: string
        Mobile:
          nullable: true
          type: string
        TicketNo:
          nullable: true
          type: string
        TicketDate:
          format: date-time
          nullable: true
          type: string
        NoOfMembers:
          format: int32
          nullable: true
          type: integer
        TotalAmount:
          format: double
          type: number
        Service:
          nullable: true
          type: string
        user:
          nullable: true
          type: string
        Adults:
          format: int32
          nullable: true
          type: integer
        Childrens:
          format: int32
          nullable: true
          type: integer
        AdultRate:
          format: int32
          nullable: true
          type: integer
        ChildRate:
          format: int32
          nullable: true
          type: integer
        BookingUId:
          nullable: true
          type: string
        IsDone:
          type: boolean
        isConfirm:
          nullable: true
          type: string
        confirmDate:
          format: date-time
          nullable: true
          type: string
      type: object
    WebinarRegistration:
      additionalProperties: false
      example:
        collegeName: collegeName
        linkdinProfileUrl: linkdinProfileUrl
        gender: gender
        city: city
        registrationId: 0
        name: name
        emailId: emailId
        mobileNo: mobileNo
        isWorking: true
      properties:
        registrationId:
          format: int32
          type: integer
        name:
          type: string
        mobileNo:
          maxLength: 10
          minLength: 10
          type: string
        emailId:
          nullable: true
          type: string
        linkdinProfileUrl:
          nullable: true
          type: string
        isWorking:
          type: boolean
        collegeName:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        gender:
          nullable: true
          type: string
      required:
      - mobileNo
      - name
      type: object
    WebinarRegistrationProd:
      additionalProperties: false
      example:
        collegeName: collegeName
        linkdinProfileUrl: linkdinProfileUrl
        gender: gender
        city: city
        registrationId: 0
        name: name
        emailId: emailId
        mobileNo: mobileNo
        isWorking: true
      properties:
        registrationId:
          format: int32
          type: integer
        name:
          type: string
        mobileNo:
          maxLength: 10
          minLength: 10
          type: string
        emailId:
          nullable: true
          type: string
        linkdinProfileUrl:
          nullable: true
          type: string
        isWorking:
          type: boolean
        collegeName:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        gender:
          nullable: true
          type: string
      required:
      - mobileNo
      - name
      type: object
    WeddingAllotment:
      additionalProperties: false
      example:
        TotalGuest: 5
        RoomNo: RoomNo
        CreationDate: 2000-01-23T04:56:07.000+00:00
        CheckinDate: 2000-01-23T04:56:07.000+00:00
        CheckOutTime: CheckOutTime
        CreatedBy: 5
        AllotId: 0
        WeddingId: 6
        RoomId: 1
        CheckinTime: CheckinTime
        BookingId: BookingId
        RateGiven: 2.3021358869347655
        CheckOutDate: 2000-01-23T04:56:07.000+00:00
      properties:
        AllotId:
          format: int32
          type: integer
        WeddingId:
          format: int32
          type: integer
        RoomId:
          format: int32
          type: integer
        RoomNo:
          nullable: true
          type: string
        CreatedBy:
          format: int32
          type: integer
        CreationDate:
          format: date-time
          type: string
        CheckinDate:
          format: date-time
          type: string
        CheckOutDate:
          format: date-time
          type: string
        TotalGuest:
          format: int32
          type: integer
        CheckinTime:
          nullable: true
          type: string
        CheckOutTime:
          nullable: true
          type: string
        BookingId:
          nullable: true
          type: string
        RateGiven:
          format: double
          type: number
      type: object
    WeddingBookingList:
      additionalProperties: false
      example:
        EventDate: 2000-01-23T04:56:07.000+00:00
        Details: Details
        UserName: UserName
        BookingUId: BookingUId
        Venue: Venue
        WeddingId: 6
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        MonthDay: 0
        TotalAmount: 1.4658129805029452
        CustomerName: CustomerName
        PContact: PContact
      properties:
        MonthDay:
          format: int32
          type: integer
        WeddingId:
          format: int32
          type: integer
        EventDate:
          format: date-time
          type: string
        TotalAmount:
          format: double
          type: number
        Details:
          nullable: true
          type: string
        PContact:
          nullable: true
          type: string
        CreatedDate:
          format: date-time
          nullable: true
          type: string
        CustomerName:
          nullable: true
          type: string
        BookingUId:
          nullable: true
          type: string
        UserName:
          nullable: true
          type: string
        Venue:
          nullable: true
          type: string
      type: object
    WeddingDetail:
      additionalProperties: false
      example:
        DetailId: 4
        Requirment: Requirment
        Rate: 1.0246457001441578
        NoOfPax: 1
        Total: 1.4894159098541704
        WeddingId: 6
        ServiceId: 7
      properties:
        DetailId:
          format: int32
          type: integer
        ServiceId:
          format: int32
          type: integer
        NoOfPax:
          format: int32
          type: integer
        Rate:
          format: double
          type: number
        Total:
          format: double
          type: number
        WeddingId:
          format: int32
          type: integer
        Requirment:
          nullable: true
          type: string
      type: object
    WeddingFoodItemList:
      additionalProperties: false
      example:
        Details: Details
        DetailId: 2
        ServiceName: ServiceName
        NoOfPax: 5
        WeddingId: 5
        FoodItemId: 6
        FoodItemName: FoodItemName
        WeddingFoodItemId: 0
        WeddingServiceId: 7
        RateGiven: 1.4658129805029452
      properties:
        WeddingFoodItemId:
          format: int32
          type: integer
        FoodItemId:
          format: int32
          type: integer
        FoodItemName:
          nullable: true
          type: string
        RateGiven:
          format: double
          type: number
        NoOfPax:
          format: int32
          type: integer
        Details:
          nullable: true
          type: string
        WeddingId:
          format: int32
          type: integer
        DetailId:
          format: int32
          type: integer
        WeddingServiceId:
          format: int32
          type: integer
        ServiceName:
          nullable: true
          type: string
      type: object
    WeddingFoodItems:
      additionalProperties: false
      properties:
        WeddingFoodItemId:
          format: int32
          type: integer
        FoodItemId:
          format: int32
          type: integer
        RateGiven:
          format: double
          type: number
        NoOfPax:
          format: int32
          type: integer
        Details:
          nullable: true
          type: string
        WeddingId:
          format: int32
          type: integer
        DetailId:
          format: int32
          type: integer
        WeddingServiceId:
          format: int32
          type: integer
      type: object
    WeddingMasterList:
      additionalProperties: false
      example:
        EventDate: 2000-01-23T04:56:07.000+00:00
        AdvanceAmount: 5.637376656633329
        PackageName: PackageName
        WeddingId: 6
        CustomerId: 1
        TotalAmount: 5.962133916683182
        IsConfermed: IsConfermed
        WeddingPackageId: 0
        BookingUId: BookingUId
        IsAlacarte: true
        CustomerName: CustomerName
        PContact: PContact
        ArrivalTime: ArrivalTime
      properties:
        IsConfermed:
          nullable: true
          type: string
        IsAlacarte:
          nullable: true
          type: boolean
        WeddingPackageId:
          format: int32
          nullable: true
          type: integer
        PackageName:
          nullable: true
          type: string
        WeddingId:
          format: int32
          type: integer
        CustomerId:
          format: int32
          type: integer
        EventDate:
          format: date-time
          type: string
        ArrivalTime:
          nullable: true
          type: string
        TotalAmount:
          format: double
          type: number
        AdvanceAmount:
          format: double
          type: number
        PContact:
          nullable: true
          type: string
        CustomerName:
          nullable: true
          type: string
        BookingUId:
          nullable: true
          type: string
      type: object
    WeddingMasterView:
      additionalProperties: false
      example:
        EventDate: 2000-01-23T04:56:07.000+00:00
        AdvanceAmount: 5.637376656633329
        ExtraWeddingDetails:
        - DetailId: 7
          Requirment: Requirment
          Rate: 5.025004791520295
          NoOfPax: 4
          Total: 9.965781217890562
          WeddingId: 9
          ServiceId: 1
        - DetailId: 7
          Requirment: Requirment
          Rate: 5.025004791520295
          NoOfPax: 4
          Total: 9.965781217890562
          WeddingId: 9
          ServiceId: 1
        Discount: 3.616076749251911
        Message: Message
        ConfirmDate: 2000-01-23T04:56:07.000+00:00
        WeddingId: 6
        Reason: Reason
        Result: true
        SGST: 7.061401241503109
        WeddingPackageId: 2
        WeddingDetails:
        - DetailId: 4
          Requirment: Requirment
          Rate: 1.0246457001441578
          NoOfPax: 1
          Total: 1.4894159098541704
          WeddingId: 6
          ServiceId: 7
        - DetailId: 4
          Requirment: Requirment
          Rate: 1.0246457001441578
          NoOfPax: 1
          Total: 1.4894159098541704
          WeddingId: 6
          ServiceId: 7
        BookingUId: BookingUId
        CGST: 9.301444243932576
        CustomerName: CustomerName
        ArrivalTime: ArrivalTime
        LastUpdatedBy: 0
        IsDeleted: true
        Venue: Venue
        CustomerId: 1
        TotalAmount: 5.962133916683182
        RelieveTime: RelieveTime
        IsConfermed: IsConfermed
        Details: Details
        UserId: 2
        IsAlacarte: true
        SContact: SContact
        PContact: PContact
      properties:
        LastUpdatedBy:
          format: int32
          type: integer
        WeddingId:
          format: int32
          type: integer
        CustomerId:
          format: int32
          type: integer
        CustomerName:
          nullable: true
          type: string
        EventDate:
          format: date-time
          type: string
        ArrivalTime:
          nullable: true
          type: string
        RelieveTime:
          nullable: true
          type: string
        TotalAmount:
          format: double
          type: number
        AdvanceAmount:
          format: double
          type: number
        Details:
          nullable: true
          type: string
        IsDeleted:
          type: boolean
        PContact:
          nullable: true
          type: string
        SContact:
          nullable: true
          type: string
        Message:
          nullable: true
          type: string
        BookingUId:
          nullable: true
          type: string
        UserId:
          format: int32
          type: integer
        Result:
          type: boolean
        IsConfermed:
          nullable: true
          type: string
        ConfirmDate:
          format: date-time
          nullable: true
          type: string
        Reason:
          nullable: true
          type: string
        Venue:
          nullable: true
          type: string
        SGST:
          format: double
          nullable: true
          type: number
        CGST:
          format: double
          nullable: true
          type: number
        Discount:
          format: double
          nullable: true
          type: number
        IsAlacarte:
          nullable: true
          type: boolean
        WeddingPackageId:
          format: int32
          nullable: true
          type: integer
        WeddingDetails:
          items:
            $ref: '#/components/schemas/WeddingDetail'
          nullable: true
          type: array
        ExtraWeddingDetails:
          items:
            $ref: '#/components/schemas/ExtraWeddingDetail'
          nullable: true
          type: array
      type: object
    WeddingPackage:
      additionalProperties: false
      example:
        PerPersonCost: 5.962133916683182
        IsDeleted: true
        WeddingPackageId: 0
        WithFoodCost: 6.027456183070403
        WithoutFoodCost: 1.4658129805029452
        Description: Description
        PackageName: PackageName
        RangeOfPeoples: RangeOfPeoples
        CreatedDate: 2000-01-23T04:56:07.000+00:00
      properties:
        WeddingPackageId:
          format: int32
          type: integer
        PackageName:
          nullable: true
          type: string
        WithFoodCost:
          format: double
          type: number
        WithoutFoodCost:
          format: double
          type: number
        PerPersonCost:
          format: double
          type: number
        RangeOfPeoples:
          nullable: true
          type: string
        Description:
          nullable: true
          type: string
        CreatedDate:
          format: date-time
          type: string
        IsDeleted:
          type: boolean
      type: object
    WeddingPackageMasterList:
      additionalProperties: false
      example:
        LastUpdatedBy: 2
        EventDate: 2000-01-23T04:56:07.000+00:00
        AdvanceAmount: 5.962133916683182
        IsDeleted: true
        UserName: UserName
        Discount: 3.616076749251911
        Venue: Venue
        WeddingPackageName: WeddingPackageName
        WeddingId: 0
        CustomerId: 6
        TotalAmount: 1.4658129805029452
        LastUpdatedUser: LastUpdatedUser
        RelieveTime: RelieveTime
        IsConfermed: IsConfermed
        Details: Details
        SGST: 7.061401241503109
        BookingUId: BookingUId
        UserId: 5
        CreatedDate: 2000-01-23T04:56:07.000+00:00
        CGST: 9.301444243932576
        CustomerName: CustomerName
        SContact: SContact
        PContact: PContact
        ArrivalTime: ArrivalTime
      properties:
        IsConfermed:
          nullable: true
          type: string
        WeddingId:
          format: int32
          type: integer
        CustomerId:
          format: int32
          type: integer
        EventDate:
          format: date-time
          type: string
        ArrivalTime:
          nullable: true
          type: string
        RelieveTime:
          nullable: true
          type: string
        TotalAmount:
          format: double
          type: number
        AdvanceAmount:
          format: double
          type: number
        Details:
          nullable: true
          type: string
        IsDeleted:
          type: boolean
        PContact:
          nullable: true
          type: string
        SContact:
          nullable: true
          type: string
        CreatedDate:
          format: date-time
          nullable: true
          type: string
        CustomerName:
          nullable: true
          type: string
        BookingUId:
          nullable: true
          type: string
        UserId:
          format: int32
          type: integer
        UserName:
          nullable: true
          type: string
        WeddingPackageName:
          nullable: true
          type: string
        LastUpdatedBy:
          format: int32
          type: integer
        LastUpdatedUser:
          nullable: true
          type: string
        Venue:
          nullable: true
          type: string
        SGST:
          format: double
          nullable: true
          type: number
        CGST:
          format: double
          nullable: true
          type: number
        Discount:
          format: double
          nullable: true
          type: number
      type: object
    WeddingService:
      additionalProperties: false
      example:
        IsDeleted: true
        Rate: 6.027456183070403
        IsActive: true
        ServiceType: ServiceType
        IsPax: true
        OrderNo: 1
        ServiceId: 0
        Name: Name
      properties:
        ServiceId:
          format: int32
          type: integer
        Rate:
          format: double
          type: number
        IsActive:
          type: boolean
        IsDeleted:
          type: boolean
        IsPax:
          type: boolean
        Name:
          nullable: true
          type: string
        OrderNo:
          format: int32
          type: integer
        ServiceType:
          nullable: true
          type: string
      type: object
    WeddingServiceView:
      additionalProperties: false
      example:
        IsDeleted: true
        Message: Message
        Rate: 6.027456183070403
        IsActive: true
        ServiceType: ServiceType
        IsPax: true
        OrderNo: 1
        ServiceId: 0
        Result: true
        Name: Name
      properties:
        ServiceId:
          format: int32
          type: integer
        Rate:
          format: double
          type: number
        IsActive:
          type: boolean
        IsDeleted:
          type: boolean
        IsPax:
          type: boolean
        Message:
          nullable: true
          type: string
        OrderNo:
          format: int32
          type: integer
        Result:
          type: boolean
        ServiceType:
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
      type: object
    youtubeTicket:
      additionalProperties: false
      properties:
        ticketId:
          format: int32
          type: integer
        customerName:
          nullable: true
          type: string
        mobileNo:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        city:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        pincode:
          nullable: true
          type: string
        reference:
          nullable: true
          type: string
        adultCount:
          format: int32
          type: integer
        childCount:
          format: int32
          type: integer
        adultRate:
          format: int32
          type: integer
        childRate:
          format: int32
          type: integer
        totalAmount:
          format: double
          type: number
        discountInPercent:
          format: double
          nullable: true
          type: number
        finalAmount:
          format: double
          type: number
        ticketDate:
          format: date-time
          type: string
        ticketNo:
          nullable: true
          type: string
      type: object
    youTubeUserBasicView:
      additionalProperties: false
      properties:
        userId:
          format: int32
          type: integer
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        mobileNo:
          type: string
        emailId:
          type: string
        altMobileNo:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        userAddress:
          $ref: '#/components/schemas/userAddress'
        userSocialDetails:
          $ref: '#/components/schemas/userSocialDetails'
      required:
      - emailId
      - firstName
      - lastName
      - middleName
      - mobileNo
      type: object
    zomatoCartView:
      additionalProperties: false
      properties:
        customerId:
          format: int32
          type: integer
        itemId:
          format: int32
          type: integer
        quantity:
          format: int32
          type: integer
      type: object
    zomatoFoodCategory:
      additionalProperties: false
      properties:
        categoryId:
          format: int32
          type: integer
        categoryName:
          type: string
        photoUrl:
          nullable: true
          type: string
      required:
      - categoryName
      type: object
    zomatoMenuItem:
      additionalProperties: false
      properties:
        itemID:
          format: int32
          type: integer
        restaurantID:
          format: int32
          type: integer
        categoryId:
          format: int32
          type: integer
        name:
          type: string
        description:
          nullable: true
          type: string
        price:
          format: double
          type: number
        photoUrl:
          nullable: true
          type: string
        availability:
          nullable: true
          type: boolean
      required:
      - name
      - price
      - restaurantID
      type: object
    zomatoOrderViewModel:
      additionalProperties: false
      properties:
        userId:
          format: int32
          type: integer
        totalAmount:
          format: double
          type: number
        restaurantId:
          format: int32
          type: integer
        deliveryAddress:
          type: string
      required:
      - deliveryAddress
      - restaurantId
      - totalAmount
      - userId
      type: object
    zomatoRestaurant:
      additionalProperties: false
      properties:
        restaurantID:
          format: int32
          type: integer
        name:
          type: string
        cuisineType:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        contactNo:
          type: string
        openingHours:
          type: string
      required:
      - contactNo
      - name
      - openingHours
      type: object
    zomatoUser:
      additionalProperties: false
      properties:
        userId:
          format: int32
          type: integer
        userName:
          type: string
        role:
          type: string
        password:
          type: string
        mobileNo:
          type: string
        emailId:
          nullable: true
          type: string
        restaurantId:
          format: int32
          nullable: true
          type: integer
      required:
      - mobileNo
      - password
      - role
      - userName
      type: object
    ZoomBooking:
      additionalProperties: false
      example:
        alternateContactNo: alternateContactNo
        travelDate: 2000-01-23T04:56:07.000+00:00
        pickupAddress: pickupAddress
        customerId: 6
        startTime: startTime
        toLocationId: 5
        fromLocationId: 1
        invoiceNo: invoiceNo
        bookingId: 0
        carId: 5
        isComplete: true
      properties:
        bookingId:
          format: int32
          type: integer
        customerId:
          format: int32
          type: integer
        fromLocationId:
          format: int32
          type: integer
        toLocationId:
          format: int32
          type: integer
        travelDate:
          format: date-time
          type: string
        startTime:
          nullable: true
          type: string
        carId:
          format: int32
          type: integer
        pickupAddress:
          nullable: true
          type: string
        alternateContactNo:
          nullable: true
          type: string
        invoiceNo:
          nullable: true
          type: string
        isComplete:
          type: boolean
      required:
      - customerId
      - toLocationId
      type: object
    ZoomCarAccessories:
      additionalProperties: false
      example:
        accessoriesId: 5
        accessoriesTitle: accessoriesTitle
        showOnWebsite: true
        carId: 2
      properties:
        accessoriesId:
          format: int32
          type: integer
        accessoriesTitle:
          type: string
        showOnWebsite:
          type: boolean
        carId:
          format: int32
          type: integer
      required:
      - accessoriesTitle
      - carId
      type: object
    ZoomCarReview:
      additionalProperties: false
      example:
        carRatingId: 0
        review: review
        rating: 5
        bookingId: 1
        carId: 6
        reviewTitle: reviewTitle
      properties:
        carRatingId:
          format: int32
          type: integer
        carId:
          format: int32
          type: integer
        bookingId:
          format: int32
          type: integer
        rating:
          format: int32
          type: integer
        reviewTitle:
          nullable: true
          type: string
        review:
          type: string
      required:
      - bookingId
      - carId
      - rating
      - review
      type: object
    ZoomCarView:
      additionalProperties: false
      example:
        vehicleNo: vehicleNo
        pricingDescription: pricingDescription
        ZoomCarAccessoriess:
        - accessoriesId: 5
          accessoriesTitle: accessoriesTitle
          showOnWebsite: true
          carId: 2
        - accessoriesId: 5
          accessoriesTitle: accessoriesTitle
          showOnWebsite: true
          carId: 2
        locationId: 1
        imageUrl: imageUrl
        name: name
        ownerUserId: 5
        registeredOn: 2000-01-23T04:56:07.000+00:00
        brand: brand
        pricing: 6.027456183070403
        carId: 0
      properties:
        carId:
          format: int32
          type: integer
        brand:
          type: string
        name:
          type: string
        pricingDescription:
          type: string
        pricing:
          format: double
          type: number
        locationId:
          format: int32
          type: integer
        registeredOn:
          format: date-time
          type: string
        imageUrl:
          type: string
        vehicleNo:
          type: string
        ownerUserId:
          format: int32
          type: integer
        ZoomCarAccessoriess:
          items:
            $ref: '#/components/schemas/ZoomCarAccessories'
          nullable: true
          type: array
      required:
      - brand
      - imageUrl
      - locationId
      - name
      - ownerUserId
      - pricing
      - pricingDescription
      - vehicleNo
      type: object
    ZoomLocation:
      additionalProperties: false
      example:
        pincode: pincode
        city: city
        locationId: 0
        title: title
      properties:
        locationId:
          format: int32
          type: integer
        city:
          type: string
        title:
          type: string
        pincode:
          type: string
      required:
      - city
      - pincode
      - title
      type: object
    ZoomUser:
      additionalProperties: false
      example:
        password: password
        name: name
        emailId: emailId
        mobileNo: mobileNo
        userRole: userRole
        userId: 0
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        userId:
          format: int32
          type: integer
        name:
          type: string
        userRole:
          type: string
        emailId:
          type: string
        mobileNo:
          type: string
        password:
          type: string
        createdOn:
          format: date-time
          type: string
      required:
      - emailId
      - mobileNo
      - name
      - password
      - userRole
      type: object
    _api_User_CreateNewBooking_post_request:
      properties:
        BookingId:
          format: int32
          type: integer
        Name:
          type: string
        City:
          type: string
        MobileNo:
          type: string
        State:
          type: string
        AltMobNo:
          type: string
        DateOfStay:
          format: date-time
          type: string
        NoOfMembers:
          format: int32
          type: integer
        IsConfirmed:
          type: boolean
      type: object
